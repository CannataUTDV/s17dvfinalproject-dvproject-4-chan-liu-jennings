human_gene_lengths_lab4 <- read.csv("C:/Users/Conney/Desktop/human_gene_lengths_lab4.csv", sep="")
View(human_gene_lengths_lab4)
humangene<- read.csv(human_gene_lengths_lab4)
View(human_gene_lengths_lab4)
humangene<- read.csv('human_gene_lengths_lab4')
hist(human_gene_lengths_lab4$nucleotides)
sd(human_gene_lengths_lab4$nucleotides)
sample<- sample(human_gene_lengths_lab4$nucleotides,size=75)
hist(sample)
sd(sample)
myxbar<- rep(NA,1000)
for(i in 1:1000){mysample<- sample(human_gene_lengths_lab4$nucleotides, size=75)myxbar[i]<-mean(mysamp)}
sderror<- sd(sample)/sqrt(75)
sderror
lab05_milk <- read.csv("C:/Users/Conney/Desktop/lab05_milk.csv")
View(lab05_milk)
head(lab05_milk)
hist(lab05_milk$Protein)
log(lab05_milk$Protein)
protein<- log(lab05_milk$Protein)
hist(protein)
lab05_milk <- read.csv("C:/Users/Conney/Desktop/lab05_milk.csv")
View(lab05_milk)
lupins<- lab05_milk
lupin<- lab05_milk(lab05_milk$protein, lab05_milk$diet== 'lupins',)
lupin<- lab05_milk(lab05_milk$protein, lab05_milk$diet== 'lupins',)
lupin<- (lab05_milk$protein, lab05_milk$diet== 'lupins',)
lupin<- lab05_milk$protein[lab05_milk$diet == 'lupins',]
lupin
lupin<- lab05_milk$diet== 'lupins'
lupin<- lab05_milk[lab05_milk$diet== 'lupins',]
lupin
lupin<- lab05_milk$protein[lab05_milk$Diet == 'lupins',]
lupin
lupin<- lab05_milk$protein[lab05_milk$Diet == 'lupins']
lupin
lupin<- lab05_milk$protein[lab05_milk$Diet == lupins]
lab05_milk$protein[lab05_milk$Diet == lupins]
lab05_milk$Protein[lab05_milk$Diet==lupins]
snapdragons <- read.csv("C:/Users/Conney/Desktop/lab07_snapdragons.csv")
View(snapdragons)
trial1<- table(snapdragons$Trial='1', Flower_color= 'white')
trial1<- table(snapdragons$Trial='1', Flower_color= 'white')
trial1<- table(snapdragons$Trial='1')
trial1<- table(snapdragons$Trial)
trial1
trial1<- table(snapdragons$Trial=='1')
trial 1
trial1
trial1<- table(snapdragons$Trial=='1', snapdragons$Flower_Color=='white')
trial1
trial1<- table(snapdragons$Trial=='1'[snapdragons$Flower_Color=='white')
flowercolor<- snapdragons$Flower_Color=='white'
trial1<- flowercolor
trial1<- flowercolor[snapdragons$Trial=='1']
trial1
trial1<-table(trial1)
trial1
trial2<- flowercolor[snapdragons$Trial=='2']
trial2<- table(trial2)
trial2
trial3<- flowercolor[snapdragons$Trial=='3']
trial3<- table(trial3)
trial3
trial4<- flowercolor[snap$dragons$Trial=='4']
trial4<- flowercolor[snapdragons$Trial=='4']
trial4<- table(trial4)
trial4
trial5<- flowercolor[snapdragons$Trial=='5']
trial5<- table(trial5)
trial5
trial6<- flowercolor[snapdragons$Trial=='6']
trial6<- table(trial6)
trial6
2<- snapdragons$Trial=='2'
red2<- snapdragons$Trial=='2'
red2<- red2(Flower_Color=='red')
red2<-red2[snapdragons$Trial=='2']
red2
table(red2)
red2<- snapdragons[snapdragons$Trial=='2', snapdragons$Flower_Color=='red']
red2<- snapdragons[snapdragons$Trial=='2,, snapdragons$Flower_Color=='red',]
red2<- snapdragons[snapdragons$Trial=='2[snapdragons$Flower_Color=='red']]
red2<- snapdragons[snapdragons$Trial=='2'[snapdragons$Flower_Color=='red']]
red2<- snapdragons$Trial=='2'[snapdragons$Flower_Color=='red']
red2
table(red2)
trial2<- snapdragons$Trial=='2'
red2<-trial2[snapdragons$Flower_Color=='red']
table(red2)
trial5<- snapdragons$Trial=='5'
white5<- trial5[snapdragons$Flower_Color=='white']
table(white5)
red2/trial2
trial2<- snapdragons$Trial=='2'
red2<- trial2[snapdragons$Flower_Color=='red']
red2/trial2
trial2
table(trial2)
table(red2)
dbinom(x=6, n=36, p=0.25)
dbinom(6,36, p=0.25)
monogammo <- read.csv("C:/Users/Conney/Desktop/lab08_monogammo (1).csv")
View(monogammo)
table(monogammo$Hemoglobin=='Normal')
normal <-table(monogammo$Hemoglobin=='Normal')
table(normal[monogammo$Albumin=='Normal'])
table(monogammo$Hemoglobin=='Normal', monogammo$Albumin=='Normal')
hemoglobin<- monogammo
hemoglobin<- monogammo$Hemoglobin=='Normal'
albumin<- hemoglobin[monogammo$Albumin=='Normal']
albumin
table(albumin)
age<- albumin[monogammo$Age_Group=='2']
table(age)
age
table(albumin[monogammo$Age_Group=='2'])
table(monogammo$Hemoglobin=='Normal', monogammo$Albumin=='Normal', monogammo$Age_Group=='2')
albumin
table(albumin)
albumin[monogammo$Age_Group=='2']
table(albumin)
table(albumin[monogammo$Age_Group=='2'])
table(albumin[monogammo$Age_Group=='2',])
age<- monogammo$Age_Group=='2'
yes<- age[monogammo$Albumin=='Normal', monogammo$Hemoglobin=='Normal']
yes<- age[monogammo$Albumin=='Normal',, monogammo$Hemoglobin=='Normal',]
yes<- age[monogammo$Albumin=='Normal']
table(yes)
all<- yes[monogammo$Hemoglobin=='Normal']
table(all)
monogammo$Albumin=='Normal'
table(monogammo$Albumin=='Normal')
hemoglobin<- monogammo$Hemoglobin=='Normal'
table(hemoglobin)
albumin<- hemoglobin[hemoglobin[monogammo$Albumin=='Normal']]
albumin
table(albumin)
albumin<- hemoglobin[monogammo$Albumin=='Normal']
table(albumin)
table(monogammo$Albumin=='Normal')
table(monogammo$Hemoglobin=='Normal')
age<- monogammo$Age_Group=='2'
age
age<- table(age)
age
albumin<- age[monogammo$Albumin=='Normal']
table(albumin)
age<- monogammo$Age_Group=='Normal'
age<- monogammo$Age_Group=='2'
age<- monogammo$Age_Group=='2'
albumin<- age[monogammo$Albumin=='Normal']
hemoglobin<- albumin[monogammo$Hemoglobin=='Normal']
table(hemoglobin)
hemoglobin<- monogammo$Hemoglobin=='Normal'
hemoglobin=='TRUE'
hemoglobin<- monogammo$Hemoglobin=='Normal'
albumin<- hemoglobin[monogammo$Albumin=='Normal']
age<- albumin[monogammo$Age_Group=='2']
table(age)
lol<- table(monogammo$Hemoglobin=='Normal', monogammo$Albumin=='Normal')
lol
lol=='TRUE'
ew<- monogammo$Age_Group=='2'
table(ew, lol)
ew<- monogammo$Age_Group=='2'
ew
table(ew)
table(ew)
table(monogammo$Hemoglobin=='Normal', monogammo$Albumin=='Normal', monogammo$Age_Group=='2')
table(monogammo$Hemoglobin=='Normal', monogammo$Albumin=='Normal', monogammo$Age_Group=='2',)
table(monogammo$Hemoglobin=='Normal', monogammo$Albumin=='Normal', monogammo$Age_Group=='2')
all<- monogammo$Age_Group=='2', monogammo$Albumin=='Normal', monogammo$Hemoglobin=='Normal'
all<- monogram[monogammo$Age_Group=='2', monogammo$Albumin=='Normal', monogammo$Hemoglobin=='Normal']
all<- monogammo[monogammo$Age_Group=='2', monogammo$Albumin=='Normal', monogammo$Hemoglobin=='Normal']
age<- monogammo$Age_Group=='2'
albumin<- age[monogammo$Albumin=='Normal']
hemoglobin<- albumin[monogammo$Hemoglobin=='Normal']
hemoglobin
table(hemoglobin)
age<- monogammo$Albumin=='Normal'[monogammo$Age_Group=='2']
age<- monogammo$Albumin=='Normal'[monogammo$Age_Group=='2']
ah<- monogammo$Albumin=='Normal', monogammo$Hemoglobin=='Normal'
monogammo <- read.csv("C:/Users/Conney/Desktop/lab08_monogammo (1).csv")
View(monogammo)
ah<- monogammo$Albumin=='Normal', monogammo$Hemoglobin=='Normal'
monogammo$Albumin=='Normal'
table(monogammo$Albumin=='Normal', monogammo$Hemoglobin=='Normal')
table(monogammo$Albumin, monogammo$Hemoglobin, monogammo$Age_Group)
ramburii <- read.csv("C:/Users/Conney/Desktop/ramburii_lab10.csv")
View(ramburii)
qqnorm(ramburri$Abdomen_length_mm)
qqnorm(ramburii$Abdomen_length_mm)
qqline(ramburii$Abdomen_length_mm)
lab10_bodyfat <- read.csv("C:/Users/Conney/Desktop/lab10_bodyfat.csv")
View(lab10_bodyfat)
lab10_bodyfat <- read.csv("C:/Users/Conney/Desktop/lab10_bodyfat.csv")
View(lab10_bodyfat)
plot(lab10_bodyfat$Height, lab10_bodyfat$Percent)
birthwt <- read.csv("C:/Users/Conney/Desktop/lab11_birthwt.csv")
View(birthwt)
premature<- (birthwt$bwt~birthwt$ptl=='yes')
normal<- (birthwt$bwt~birthwt$ptl=='no')
summary(premature)
summary(premature)
summary(avo(premature))
myaov<- aov(premature)
summary(myaov)
arcsin <- read.csv("C:/Users/Conney/Desktop/arcsin.xlsx", sep="")
View(arcsin)
View(arcsin)
View(arcsin)
View(arcsin)
arcsin <- read.csv("C:/Users/Conney/Desktop/arcsin.csv")
View(arcsin)
arcsi$groups<- as.factor(arcsin$groups)
arcsin$groups<- as.factor(arcsin$groups)
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("ggplot2")
install.packages("ggplot2", lib="/data/Rpackages/")
install.packages("devtools")
library(devtools)
install_github("easyGgplot2", "kassambara")
library(easyGgplot2)
Q2 <- read.csv("C:/Users/Conney/Desktop/Q2.csv")
View(Q2)
hist(Q2)
diff<- Q2$Hunger-Q2$Martian
qqnorm(diff)
qqline(diff)
qqnorm(diff, main=Hunger vs Martian)
qqnorm(diff, main='Hunger vs Martian')
qqline(diff)
qqline(diff)
median(Q2$Hunger)
median(Q2$Martian)
`Q3.(1)` <- read.csv("C:/Users/Conney/Desktop/Q3 (1).csv")
View(`Q3.(1)`)
daphne<- Q3$Depth[Q3$Island='DaphneMajor']
daphne<- Q3$Depth[Q3$Island=='DaphneMajor']
View(`Q3.(1)`)
q3<- `Q3.(1)
Q3 <- read.csv("C:/Users/Conney/Desktop/Q3 (1).csv")
View(Q3)
daphne<- Q3$Depth[Q3$Island=='DaphneMajor']
baltra<- Q3$Depth[Q3$Island=='Baltra']
length(daphne)
length(baltra)
qqnorm(daphne, main='Daphne Major Beak Depth')
qqline(daphne)
qqnorm(baltra, main='Baltra Beak Depth')
qqline(baltra)
install.packages('car')
library(car)
leveneTest(Depth~Island, data=DaphneMajor)
leveneTest(Depth~Island, data=Q3)
leveneTest(Depth~Island, data=Q3)
t.test(daphne, baltra, alternative='greater')
Q4 <- read.csv("C:/Users/Conney/Desktop/Q4.csv")
View(Q4)
my_model<- aov(Q4$Consumption~Q4$Month)
boxplot(Q4$Consumption~Q4$Month, ylab='Consumption (kg)', main='Food consumed in diff months')
boxplot(Q4$Consumption~Q4$Month, ylab='Consumption (kg)', main='Food consumed per month')
library(car)
leveneTest(Consumption~Month, data=Q4)
summary(my_model)
TukeyHSD(my_model)
Q5 <- read.csv("C:/Users/Conney/Desktop/Q5.csv")
View(Q5)
hcv_table<- rbind(c(2636, 2738),c(6871,6442), c(3883, 4272), c(3131, 3718))
hcv_table
chisq.test(hcv_table)$expected
chisq.test(hcv_table.correct=F)
chisq.test(hcv_table,correct=F)
Q6 <- read.csv("C:/Users/Conney/Desktop/Q6.csv")
View(Q6)
Q8 <- read.csv("C:/Users/Conney/Desktop/Q8.csv")
View(Q8)
Q6 <- read.csv("C:/Users/Conney/Desktop/Q6.csv")
View(Q6)
my_model<- lm(Q6$Death~Q6$Density)
plot(Q6$Death, Q6$Density, main= 'Death vs Density', xlab='Density (ppl per square mile)', ylab='Death', pch=20)
qqnorm(my_model$residuals, main='Residuals Normal Q-Q Plot')
qqline(my_model$residuals)
plot(my_modell$fitted.values, my_model$residuals, xlab='Fitted Values', ylab='Residuals')
plot(my_model$fitted.values, my_model$residuals, xlab='Fitted Values', ylab='Residuals')
abline(h=0)
plot(my_model$fitted.values, my_model$residuals, xlab='Fitted Values', ylab='Residuals', main='Residual plot for Variance')
abline(h=0)
summary(my_model)
Q8 <- read.csv("C:/Users/Conney/Desktop/Q8.csv")
View(Q8)
# Run an example:
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
plot = tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
print(plot)
Another Example:
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
ggplot(data=df) + geom_point(aes(x=x, y=y))
ggplot(data=df) + geom_point(aes(x=x, y=z))
tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
'
install.packages("magrittr")
library("magrittr", lib.loc="~/R/win-library/3.3")
library("ggplot2", lib.loc="~/R/win-library/3.3")
Another Example:
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
ggplot(data=df) + geom_point(aes(x=x, y=y))
ggplot(data=df) + geom_point(aes(x=x, y=z))
tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
'
#facet_grid(clarity~cut, labeller=label_both) +
require(tidyr)
require(ggplot2)
options(java.parameters="-Xmx2g")
'
Grammar of Graphics Example:
ggplot(data = diamonds) +
geom_point(aes(x=cut, y=price, colour=as.character(carat))) +
#facet_grid(~clarity) +
#facet_grid(clarity~cut, labeller=label_both) +
#theme_classic() +
#theme(axis.ticks.y=element_blank(), axis.text.y=element_blank()) +
theme(axis.text.x=element_text(angle=50, size=10, vjust=0.5)) +
labs(title="Grammar of Graphics Example")
Another Example:
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
ggplot(data=df) + geom_point(aes(x=x, y=y))
ggplot(data=df) + geom_point(aes(x=x, y=z))
tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
'
# Run an example:
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
plot = tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
print(plot)
# Run an example:
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
plot = tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
print(plot)
Another Example:
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
ggplot(data=df) + geom_point(aes(x=x, y=y))
ggplot(data=df) + geom_point(aes(x=x, y=z))
tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
'
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
View(diamonds)
dplyr::select(diamonds, cut, clarity) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds;
diamonds %>% dplyr::select(cut, clarity) %>% tbl_df
diamonds %>% dplyr::select(color:price) %>% tbl_df # Equivalent SQL: none
diamonds %>% dplyr::select(-cut, -clarity) %>% tbl_df # Equivalent SQL: none
x <- diamonds %>% dplyr::select(cut, clarity) %>% tbl_df
x
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% dplyr::arrange(desc(x)) %>% tbl_df
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% dplyr::arrange(desc(x), y) %>% tbl_df
diamonds %>% dplyr::arrange(carat) %>% tbl_df # Equivalent SQL: select * from diamonds order by carat;
diamonds %>% dplyr::arrange(desc(carat)) %>% tbl_df # Equivalent SQL:select * from diamonds order by carat desc;
# dplyr::rename
diamonds %>% dplyr::rename(tbl= table) %>% tbl_df # Equivalent: select tbl as "table" from diamonds;
# dplyr::mutate
diamonds %>% dplyr::select(cut, clarity, x, y, z) %>% dplyr::filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% dplyr::mutate(sum = x+y+z) %>% tbl_df # Equivalent: select cut, clarity, x, y, z, x+y+z as sum from diamonds where ((cut = 'Good' or cut = 'Fair') and clarity = 'VS1') or cut is null
ndf <- diamonds %>% dplyr::select(cut, clarity, x, y, z) %>% dplyr::filter(cut %in% c("Good", "Fair"), clarity == "VS1" | is.na(cut)) %>% dplyr::mutate(sum = x+y+z) %>% tbl_df
ndf
pmin(1:5, 5:1) # Pairwise min
diamonds %>% dplyr::mutate(minxy = pmin(x,y)) %>% tbl_df
diamonds %>% dplyr::arrange(x) %>% dplyr::mutate(cumsum_x = cumsum(x)) %>% ggplot(aes(x = x, y = cumsum_x)) + geom_point()
diamonds %>% dplyr::mutate(between_x = between(x,4,4.1)) %>% tbl_df
diamonds %>% dplyr::mutate(lead_z = lead(z)-z) %>% tbl_df
diamonds %>% dplyr::mutate(lag_z = z-lag(z)) %>% tbl_df
dd <- dplyr::sample_n(diamonds, 100) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
dd <- dplyr::sample_n(diamonds, 100) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
view dd
View(dd)
diamonds %>% dplyr::mutate(lead_z = lead(z)-z) %>% tbl_df
d <- diamonds %>% group_by(cut) %>% dplyr::summarise(n = n()) %>% dplyr::arrange(n) %>% View # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut, color order by n;
library(shiny); runApp('DataVisGit/07 Shiny/01 Shiny Video Part 2/code/01-two-inputs.R')
runApp('DataVisGit/07 Shiny/01 Shiny Video Part 2/code/06-observeEvent.R')
runApp('DataVisGit/07 Shiny/01 Shiny Video Part 2/code/06-observeEvent.R')
install.packages('rsconnect')
install.packages("rsconnect")
install.packages('rsconnect')
rsconnect::setAccountInfo(name='conneyc',
token='C9C61CBC94DB32D7B753878B77C9AC2E',
secret='<SECRET>')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='conneyc',
token='C9C61CBC94DB32D7B753878B77C9AC2E',
secret='vmpWgr/+Bv6tMlxoDn0utz9jF2IEDdN5JNdenV2A')
install.packages("rsconnect")
dplyr::select(diamonds, cut, clarity) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds;
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
View(diamonds)
dplyr::select(diamonds, cut, clarity) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds;
diamonds %>% dplyr::select(cut, clarity) %>% tbl_df
diamonds %>% dplyr::select(., cut, clarity) %>% tbl_df
diamonds %>% dplyr::select(color:price) %>% tbl_df # Equivalent SQL: none
diamonds %>% dplyr::select(-cut, -clarity) %>% tbl_df # Equivalent SQL: none
x <- diamonds %>% dplyr::select(cut, clarity) %>% tbl_df
x
diamonds %>% dplyr::filter(carat > 2) %>% dplyr::select(cut, clarity) %>% tbl_df # This does not give an error.
diamonds %>% dplyr::filter(carat > 2) %>% dplyr::select(cut, clarity) %>% tbl_df # This does not give an error.
diamonds %>% dplyr::select(cut, clarity) %>% dplyr::filter(carat > 2) %>% tbl_df
diamonds %>% dplyr::select(carat, clarity) %>% dplyr::filter(carat > 2) %>% tbl_df # Equivalent SQL: select carat, clarity  from diamonds  where carat > 2;
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% dplyr::arrange(desc(x)) %>% tbl_df
data.frame(x=c(1,1,1,2,2), y=c(5:1), z=(1:5)) %>% dplyr::arrange(desc(x), y) %>% tbl_df
pmin(1:5, 5:1) # Pairwise min
diamonds %>% dplyr::mutate(minxy = pmin(x,y)) %>% tbl_df
pmax(1:5, 5:1) # Pairwise max
diamonds %>% dplyr::rename(tbl= table) %>% tbl_df # Equivalent: select table as "tbl" from diamonds;
install.packages("shinydashboard")
shiny::runApp('DataVisGit/07 Shiny/06 Dashboard')
require(shiny)
require(shinydashboard)
require(leaflet)
require(leaflet)
install.packages("leaflet")
runApp('DataVisGit/07 Shiny/06 Dashboard')
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
plot = tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
print(plot)
require(tidyr)
require(ggplot2)
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
plot = tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
print(plot)
shiny::runApp('DataVisGit/08 Shiny Actions')
shiny::runApp('DataVisGit/09TableauExamples')
shiny::runApp('DataVisGit/09TableauExamples')
sessionInfo(package=NULL)
setwd("~/dvfinalproject/02 Shiny")
shiny::runApp()
setwd("~/dvfinalproject/02 Shiny")
setwd("~/dvfinalproject/00 Doc")
sessionInfo(package=NULL)
sessionInfo(package=NULL)
source("../01 Data/ETL.R")
setwd("~/dvfinalproject/02 Shiny")
setwd("~/dvfinalproject/00 Doc")
setwd("~/dvfinalproject/00 Doc")
sessionInfo(package=NULL)
source("../01 Data/ETL.R")
