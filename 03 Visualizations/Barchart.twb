<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data.world connector' inline='true' name='federated.1x8wxt005nkj401gtv9jb02s3j89' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data.world connector' name='webdata-direct.1mhltu31qa0f7519q2eli01vpg0u'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;conneyc/s-17-dv-project-5&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmNvbm5leWMiLCJpc3MiOiJhZ2VudDpjb25uZXljOjoyYTEyMDNkYS1lM2YzLTRjNWYtODAyMy1jYmFmMmJmMmRjZjkiLCJpYXQiOjE0ODQ2OTcyMTUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.aQy8F6cDXh9qhvq8i8ZW_6lUpHMEjXm2hfU_zt2kVKPBE_unlANG5RazcIf2Gvp9YZ1VeOuGmgJEw3W2qTHbJQ&quot;}' connectionName='data.world connector' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Census2015].[v_0]' />
              <expression op='[Natality].[v_0]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.1mhltu31qa0f7519q2eli01vpg0u' name='Census2015' table='[Census2015]' type='table' />
          <relation connection='webdata-direct.1mhltu31qa0f7519q2eli01vpg0u' name='Natality' table='[Natality]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (Natality)]' value='[Natality].[v_0]' />
          <map key='[v_0]' value='[Census2015].[v_0]' />
          <map key='[v_1 (Natality)]' value='[Natality].[v_1]' />
          <map key='[v_1]' value='[Census2015].[v_1]' />
          <map key='[v_2]' value='[Natality].[v_2]' />
          <map key='[v_3]' value='[Natality].[v_3]' />
          <map key='[v_4]' value='[Natality].[v_4]' />
          <map key='[v_5]' value='[Natality].[v_5]' />
          <map key='[v_6]' value='[Natality].[v_6]' />
          <map key='[v_7]' value='[Natality].[v_7]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[Census2015]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>0</ordinal>
            <caption>AreaName</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[Census2015]</parent-name>
            <remote-alias>Median_Age</remote-alias>
            <ordinal>1</ordinal>
            <caption>Median_Age</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (Natality)]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1 (Natality)]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>State_Code</remote-alias>
            <ordinal>3</ordinal>
            <caption>State_Code</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>4</ordinal>
            <caption>Gender</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Gender_Code</remote-alias>
            <ordinal>5</ordinal>
            <caption>Gender_Code</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Race</remote-alias>
            <ordinal>6</ordinal>
            <caption>Race</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Births</remote-alias>
            <ordinal>7</ordinal>
            <caption>Births</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Average_Birth_Weight</remote-alias>
            <ordinal>8</ordinal>
            <caption>Average_Birth_Weight</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Average_Age_Mother</remote-alias>
            <ordinal>9</ordinal>
            <caption>Average_Age_Mother</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculated Difference from Average' datatype='real' name='[Calculation_775745103730778113]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([v_6])- WINDOW_AVG(AVG([v_6]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State' datatype='string' name='[v_0 (Natality)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='AreaName' datatype='string' name='[v_0]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='State_Code' datatype='integer' name='[v_1 (Natality)]' role='dimension' type='ordinal' />
      <column caption='Median_Age' datatype='real' name='[v_1]' role='measure' type='quantitative' />
      <column caption='Gender' datatype='string' name='[v_2]' role='dimension' type='nominal' />
      <column caption='Gender_Code' datatype='string' name='[v_3]' role='dimension' type='nominal' />
      <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal' />
      <column caption='Births' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
      <column caption='Average_Birth_Weight' datatype='real' name='[v_6]' role='measure' type='quantitative' />
      <column caption='Average_Age_Mother' datatype='real' name='[v_7]' role='measure' type='quantitative' />
      <column-instance column='[High Median Age]' derivation='InOut' name='[io:High Median Age:nk]' pivot='key' type='nominal' />
      <column-instance column='[v_0 (Natality)]' derivation='None' name='[none:v_0 (Natality):nk]' pivot='key' type='nominal' />
      <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
      <group name='[High Median Age]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_1 (Natality)]' member='9' />
          <groupfilter function='member' level='[v_1 (Natality)]' member='12' />
          <groupfilter function='member' level='[v_1 (Natality)]' member='23' />
          <groupfilter function='member' level='[v_1 (Natality)]' member='33' />
          <groupfilter function='member' level='[v_1 (Natality)]' member='42' />
          <groupfilter function='member' level='[v_1 (Natality)]' member='50' />
          <groupfilter function='member' level='[v_1 (Natality)]' member='54' />
        </groupfilter>
      </group>
      <group name='[Medium Median Age]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='member' level='[io:High Median Age:nk]' member='false' />
          <groupfilter function='union'>
            <groupfilter function='member' level='[v_1 (Natality)]' member='1' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='4' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='5' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='8' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='10' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='15' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='17' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='18' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='19' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='21' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='22' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='24' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='25' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='26' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='27' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='28' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='29' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='30' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='31' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='32' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='34' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='35' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='36' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='37' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='39' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='40' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='41' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='44' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='45' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='46' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='47' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='51' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='53' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='55' />
            <groupfilter function='member' level='[v_1 (Natality)]' member='56' />
          </groupfilter>
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Conney\Documents\我的 Tableau 存储库\数据源\extract_0tcgekg0c0zz6h1dv0d4u1pzijzd.tde' schema='Extract' tablename='Extract' update-time='04/20/2017 09:23:54 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[v_0 (Natality)]' value='[Extract].[v_0]' />
            <map key='[v_0]' value='[Extract].[v_01]' />
            <map key='[v_1 (Natality)]' value='[Extract].[v_1]' />
            <map key='[v_1]' value='[Extract].[v_11]' />
            <map key='[v_2]' value='[Extract].[v_2]' />
            <map key='[v_3]' value='[Extract].[v_3]' />
            <map key='[v_4]' value='[Extract].[v_4]' />
            <map key='[v_5]' value='[Extract].[v_5]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='404' timestamp-start='2017-04-20 21:23:54.057' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (Natality)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>Census2015</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_1 (Natality)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>2</ordinal>
              <family>Natality</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11734.0</statistic>
                <statistic aggregation='Avg' datatype='real'>29.044554455445546</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>56</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.659306845068047</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.639914507170078</statistic>
                <statistic aggregation='Var' datatype='real'>245.21389086799499</statistic>
                <statistic aggregation='VarP' datatype='real'>244.60692579158905</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>439630.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>3</ordinal>
              <family>Census2015</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15290.899999999998</statistic>
                <statistic aggregation='Avg' datatype='real'>37.848762376237616</statistic>
                <statistic aggregation='Min' datatype='real'>30.100000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>43.799999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.3772752618158943</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.3743312665541798</statistic>
                <statistic aggregation='Var' datatype='real'>5.6514376704418288</statistic>
                <statistic aggregation='VarP' datatype='real'>5.6374489633367748</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>581019.16999999981</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>4</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Male&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Male&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>5</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;F&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;M&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;M&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>6</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;American Indian or Alaska Native&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;White&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>7</ordinal>
              <family>Natality</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>375</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3978467.0</statistic>
                <statistic aggregation='Avg' datatype='real'>9847.6905940594061</statistic>
                <statistic aggregation='Min' datatype='integer'>11</statistic>
                <statistic aggregation='Max' datatype='integer'>193190</statistic>
                <statistic aggregation='Stdev' datatype='real'>21662.507117624958</statistic>
                <statistic aggregation='StdevP' datatype='real'>21635.680473131786</statistic>
                <statistic aggregation='Var' datatype='real'>469264214.62115198</statistic>
                <statistic aggregation='VarP' datatype='real'>468102669.53545606</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>228292190547.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>8</ordinal>
              <family>Natality</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>399</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1305683.8100000003</statistic>
                <statistic aggregation='Avg' datatype='real'>3231.8906188118817</statistic>
                <statistic aggregation='Min' datatype='real'>2876.4499999999998</statistic>
                <statistic aggregation='Max' datatype='real'>3535.0900000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>118.32396824562495</statistic>
                <statistic aggregation='StdevP' datatype='real'>118.17743695938412</statistic>
                <statistic aggregation='Var' datatype='real'>14000.561461391664</statistic>
                <statistic aggregation='VarP' datatype='real'>13965.906606289209</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4225469482.9424977</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>9</ordinal>
              <family>Natality</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>280</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11417.310000000007</statistic>
                <statistic aggregation='Avg' datatype='real'>28.260668316831701</statistic>
                <statistic aggregation='Min' datatype='real'>24.82</statistic>
                <statistic aggregation='Max' datatype='real'>33.049999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.7436611318757855</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.7415017983763248</statistic>
                <statistic aggregation='Var' datatype='real'>3.0403541428143455</statistic>
                <statistic aggregation='VarP' datatype='real'>3.0328285137479734</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>323886.07370000012</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.579755' group-percentage='0.128834' measure-ordering='alphabetic' measure-percentage='0.291411' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:v_4:nk]&#10;[none:v_0 (Natality):nk]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;American Indian or Alaska Native&quot;</bucket>
                <bucket>&quot;Connecticut&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;American Indian or Alaska Native&quot;</bucket>
                <bucket>&quot;Florida&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;American Indian or Alaska Native&quot;</bucket>
                <bucket>&quot;Maine&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;American Indian or Alaska Native&quot;</bucket>
                <bucket>&quot;New Hampshire&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;American Indian or Alaska Native&quot;</bucket>
                <bucket>&quot;Pennsylvania&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;American Indian or Alaska Native&quot;</bucket>
                <bucket>&quot;Vermont&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;American Indian or Alaska Native&quot;</bucket>
                <bucket>&quot;West Virginia&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Black or African American&quot;</bucket>
                <bucket>&quot;Connecticut&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Black or African American&quot;</bucket>
                <bucket>&quot;Florida&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Black or African American&quot;</bucket>
                <bucket>&quot;Maine&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Black or African American&quot;</bucket>
                <bucket>&quot;New Hampshire&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Black or African American&quot;</bucket>
                <bucket>&quot;Pennsylvania&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Black or African American&quot;</bucket>
                <bucket>&quot;Vermont&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Black or African American&quot;</bucket>
                <bucket>&quot;West Virginia&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;White&quot;</bucket>
                <bucket>&quot;Connecticut&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;White&quot;</bucket>
                <bucket>&quot;Florida&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;White&quot;</bucket>
                <bucket>&quot;Maine&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;White&quot;</bucket>
                <bucket>&quot;New Hampshire&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;White&quot;</bucket>
                <bucket>&quot;Pennsylvania&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;White&quot;</bucket>
                <bucket>&quot;Vermont&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;White&quot;</bucket>
                <bucket>&quot;West Virginia&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Asian or Pacific Islander&quot;</bucket>
                <bucket>&quot;Connecticut&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Asian or Pacific Islander&quot;</bucket>
                <bucket>&quot;Florida&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Asian or Pacific Islander&quot;</bucket>
                <bucket>&quot;Maine&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Asian or Pacific Islander&quot;</bucket>
                <bucket>&quot;New Hampshire&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Asian or Pacific Islander&quot;</bucket>
                <bucket>&quot;Pennsylvania&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Asian or Pacific Islander&quot;</bucket>
                <bucket>&quot;Vermont&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Asian or Pacific Islander&quot;</bucket>
                <bucket>&quot;West Virginia&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Barchart'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1x8wxt005nkj401gtv9jb02s3j89' />
          </datasources>
          <datasource-dependencies datasource='federated.1x8wxt005nkj401gtv9jb02s3j89'>
            <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_0 (Natality)]' derivation='None' name='[none:v_0 (Natality):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[v_0 (Natality)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='Average_Birth_Weight' datatype='real' name='[v_6]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='n#,##0.00&quot; g&quot;;-#,##0.00&quot; g&quot;' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='text-align' id='refline0' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[avg:v_6:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[avg:v_6:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>([federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_0 (Natality):nk] / [federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_4:nk])</rows>
        <cols>[federated.1x8wxt005nkj401gtv9jb02s3j89].[avg:v_6:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='High Median Age States'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1x8wxt005nkj401gtv9jb02s3j89' />
          </datasources>
          <datasource-dependencies datasource='federated.1x8wxt005nkj401gtv9jb02s3j89'>
            <column-instance column='[v_1]' derivation='Avg' name='[avg:v_1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_0 (Natality)]' derivation='None' name='[none:v_0 (Natality):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='Sum' name='[sum:v_5:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0 (Natality)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='State_Code' datatype='integer' name='[v_1 (Natality)]' role='dimension' type='ordinal' />
            <column caption='Median_Age' datatype='real' name='[v_1]' role='measure' type='quantitative' />
            <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='Births' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[High Median Age]' />
          <slices>
            <column>[federated.1x8wxt005nkj401gtv9jb02s3j89].[High Median Age]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_4:nk]' />
              <lod column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[avg:v_1:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1x8wxt005nkj401gtv9jb02s3j89].[sum:v_5:qk]</rows>
        <cols>[federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_0 (Natality):nk]</cols>
      </table>
    </worksheet>
    <worksheet name='ID Sets'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
            <run> - </run>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1x8wxt005nkj401gtv9jb02s3j89' />
          </datasources>
          <datasource-dependencies datasource='federated.1x8wxt005nkj401gtv9jb02s3j89'>
            <column-instance column='[v_1]' derivation='Avg' name='[avg:v_1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[High Median Age]' derivation='InOut' name='[io:High Median Age:nk]' pivot='key' type='nominal' />
            <column-instance column='[Medium Median Age]' derivation='InOut' name='[io:Medium Median Age:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_1 (Natality)]' derivation='None' name='[none:v_1 (Natality):ok]' pivot='key' type='ordinal' />
            <column-instance column='[v_5]' derivation='Sum' name='[sum:v_5:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='State_Code' datatype='integer' name='[v_1 (Natality)]' role='dimension' type='ordinal' />
            <column caption='Median_Age' datatype='real' name='[v_1]' role='measure' type='quantitative' />
            <column caption='Births' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1x8wxt005nkj401gtv9jb02s3j89].[avg:v_1:qk]' value='60' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='20' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[sum:v_5:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x8wxt005nkj401gtv9jb02s3j89].[avg:v_1:qk]</rows>
        <cols>[federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_1 (Natality):ok]</cols>
        <pages>
          <column>[federated.1x8wxt005nkj401gtv9jb02s3j89].[io:High Median Age:nk]</column>
          <column>[federated.1x8wxt005nkj401gtv9jb02s3j89].[io:Medium Median Age:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='ID Sets on Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>Sheet Name</run>
            <run>&gt;</run>
            <run> - </run>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1x8wxt005nkj401gtv9jb02s3j89' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1x8wxt005nkj401gtv9jb02s3j89'>
            <column-instance column='[High Median Age]' derivation='InOut' name='[io:High Median Age:nk]' pivot='key' type='nominal' />
            <column-instance column='[Medium Median Age]' derivation='InOut' name='[io:Medium Median Age:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Natality)]' derivation='None' name='[none:v_0 (Natality):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='Sum' name='[sum:v_5:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0 (Natality)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column aggregation='Sum' caption='State_Code' datatype='integer' name='[v_1 (Natality)]' role='dimension' type='ordinal' />
            <column caption='Births' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[sum:v_5:qk]' />
              <text column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[sum:v_5:qk]' />
              <lod column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_0 (Natality):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1x8wxt005nkj401gtv9jb02s3j89].[Latitude (generated)]</rows>
        <cols>[federated.1x8wxt005nkj401gtv9jb02s3j89].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1x8wxt005nkj401gtv9jb02s3j89].[io:High Median Age:nk]</column>
          <column>[federated.1x8wxt005nkj401gtv9jb02s3j89].[io:Medium Median Age:nk]</column>
        </pages>
      </table>
    </worksheet>
    <worksheet name='Table Calculations'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.1x8wxt005nkj401gtv9jb02s3j89' />
          </datasources>
          <datasource-dependencies datasource='federated.1x8wxt005nkj401gtv9jb02s3j89'>
            <column caption='Calculated Difference from Average' datatype='real' name='[Calculation_775745103730778113]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([v_6])- WINDOW_AVG(AVG([v_6]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_0 (Natality)]' derivation='None' name='[none:v_0 (Natality):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_775745103730778113]' derivation='User' name='[usr:Calculation_775745103730778113:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column caption='State' datatype='string' name='[v_0 (Natality)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='Average_Birth_Weight' datatype='real' name='[v_6]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='text-format' id='refline0' value='n#,##0.00&quot; g&quot;;-#,##0.00&quot; g&quot;' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='wrap' id='refline0' value='auto' />
            <format attr='text-orientation' id='refline0' value='0' />
            <format attr='text-align' id='refline0' value='left' />
            <format attr='vertical-align' id='refline0' value='center' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[usr:Calculation_775745103730778113:qk]' />
              <text column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[avg:v_6:qk]' />
              <text column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[usr:Calculation_775745103730778113:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[avg:v_6:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='value' probability='95' scope='per-pane' value-column='[federated.1x8wxt005nkj401gtv9jb02s3j89].[avg:v_6:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_0 (Natality):nk] / [federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_4:nk])</rows>
        <cols>[federated.1x8wxt005nkj401gtv9jb02s3j89].[avg:v_6:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Barchart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Table Calculations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='100'>
            <card pane-specification-id='0' param='[federated.1x8wxt005nkj401gtv9jb02s3j89].[usr:Calculation_775745103730778113:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='ID Sets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>true</bucket>
            <bucket>false</bucket>
          </multibucket>
        </current-page>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
    <window class='worksheet' name='ID Sets on Map'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='0' param='[federated.1x8wxt005nkj401gtv9jb02s3j89].[sum:v_5:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>true</bucket>
            <bucket>false</bucket>
          </multibucket>
        </current-page>
        <default-map-tool-selection tool='16' />
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='High Median Age States'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_4:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1x8wxt005nkj401gtv9jb02s3j89].[High Median Age]</field>
            <field>[federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_0 (Natality):nk]</field>
            <field>[federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_1 (Natality):ok]</field>
            <field>[federated.1x8wxt005nkj401gtv9jb02s3j89].[none:v_4:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Barchart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='High Median Age States' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ID Sets' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='ID Sets on Map' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Table Calculations' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
