<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='&quot;conneyc/s-17-dv-project-5&quot;' inline='true' name='federated.0pw97n50n71myl12ijzid0omt3s3' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='&quot;conneyc/s-17-dv-project-5&quot;' name='webdata-direct.0pd3ojr0wpjq6t12bjbz10i21ff7'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;conneyc/s-17-dv-project-5&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmNvbm5leWMiLCJpc3MiOiJhZ2VudDpjb25uZXljOjoyYTEyMDNkYS1lM2YzLTRjNWYtODAyMy1jYmFmMmJmMmRjZjkiLCJpYXQiOjE0ODQ2OTcyMTUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.aQy8F6cDXh9qhvq8i8ZW_6lUpHMEjXm2hfU_zt2kVKPBE_unlANG5RazcIf2Gvp9YZ1VeOuGmgJEw3W2qTHbJQ&quot;}' connectionName='&quot;conneyc/s-17-dv-project-5&quot;' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Natality].[v_0]' />
              <expression op='[Census2015].[v_0]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.0pd3ojr0wpjq6t12bjbz10i21ff7' name='Natality' table='[Natality]' type='table' />
          <relation connection='webdata-direct.0pd3ojr0wpjq6t12bjbz10i21ff7' name='Census2015' table='[Census2015]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (Census2015)]' value='[Census2015].[v_0]' />
          <map key='[v_0]' value='[Natality].[v_0]' />
          <map key='[v_1 (Census2015)]' value='[Census2015].[v_1]' />
          <map key='[v_1]' value='[Natality].[v_1]' />
          <map key='[v_2]' value='[Natality].[v_2]' />
          <map key='[v_3]' value='[Natality].[v_3]' />
          <map key='[v_4]' value='[Natality].[v_4]' />
          <map key='[v_5]' value='[Natality].[v_5]' />
          <map key='[v_6]' value='[Natality].[v_6]' />
          <map key='[v_7]' value='[Natality].[v_7]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>State_Code</remote-alias>
            <ordinal>1</ordinal>
            <caption>State_Code</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>2</ordinal>
            <caption>Gender</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Gender_Code</remote-alias>
            <ordinal>3</ordinal>
            <caption>Gender_Code</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Race</remote-alias>
            <ordinal>4</ordinal>
            <caption>Race</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Births</remote-alias>
            <ordinal>5</ordinal>
            <caption>Births</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Average_Birth_Weight</remote-alias>
            <ordinal>6</ordinal>
            <caption>Average_Birth_Weight</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Average_Age_Mother</remote-alias>
            <ordinal>7</ordinal>
            <caption>Average_Age_Mother</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (Census2015)]</local-name>
            <parent-name>[Census2015]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>8</ordinal>
            <caption>AreaName</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_1 (Census2015)]</local-name>
            <parent-name>[Census2015]</parent-name>
            <remote-alias>Median_Age</remote-alias>
            <ordinal>9</ordinal>
            <caption>Median_Age</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Average_Age_Mother (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='-1' formula='[v_7]' peg='0' size='0.5' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='AreaName' datatype='string' name='[v_0 (Census2015)]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[v_0]' role='dimension' type='nominal' />
      <column caption='Median_Age' datatype='real' name='[v_1 (Census2015)]' role='measure' type='quantitative' />
      <column caption='State_Code' datatype='integer' name='[v_1]' role='measure' type='quantitative' />
      <column caption='Gender' datatype='string' name='[v_2]' role='dimension' type='nominal' />
      <column caption='Gender_Code' datatype='string' name='[v_3]' role='dimension' type='nominal' />
      <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;American Indian or Alaska Native&quot;' value='Natives' />
          <alias key='&quot;Asian or Pacific Islander&quot;' value='Asian' />
          <alias key='&quot;Black or African American&quot;' value='Black' />
        </aliases>
      </column>
      <column caption='Births' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
      <column caption='Average_Birth_Weight' datatype='real' name='[v_6]' role='measure' type='quantitative' />
      <column caption='Average_Age_Mother' datatype='real' name='[v_7]' role='measure' type='quantitative' />
      <column-instance column='[v_1 (Census2015)]' derivation='Avg' name='[avg:v_1 (Census2015):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_7]' derivation='Avg' name='[avg:v_7:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_1 (Census2015)]' derivation='Count' name='[cnt:v_1 (Census2015):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_7]' derivation='Count' name='[cnt:v_7:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_7]' derivation='CountD' name='[ctd:v_7:qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_2]' derivation='None' name='[none:v_2:nk]' pivot='key' type='nominal' />
      <column-instance column='[v_1 (Census2015)]' derivation='Sum' name='[sum:v_1 (Census2015):qk]' pivot='key' type='quantitative' />
      <column-instance column='[v_6]' derivation='Sum' name='[sum:v_6:qk]' pivot='key' type='quantitative' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Conney\Documents\我的 Tableau 存储库\数据源\federated.0pw97n50n71myl12ijzid0omt3s3.tde' schema='Extract' tablename='Extract' update-time='04/30/2017 08:13:08 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[v_0 (Census2015)]' value='[Extract].[v_0]' />
            <map key='[v_0]' value='[Extract].[v_01]' />
            <map key='[v_1 (Census2015)]' value='[Extract].[v_1]' />
            <map key='[v_1]' value='[Extract].[v_11]' />
            <map key='[v_2]' value='[Extract].[v_2]' />
            <map key='[v_3]' value='[Extract].[v_3]' />
            <map key='[v_4]' value='[Extract].[v_4]' />
            <map key='[v_5]' value='[Extract].[v_5]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='404' timestamp-start='2017-04-30 20:13:08.370' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (Census2015)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>Census2015</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_1 (Census2015)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>2</ordinal>
              <family>Census2015</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15290.89999999996</statistic>
                <statistic aggregation='Avg' datatype='real'>37.848762376237524</statistic>
                <statistic aggregation='Min' datatype='real'>30.100000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>43.799999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.3772752618175113</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.3743312665557945</statistic>
                <statistic aggregation='Var' datatype='real'>5.6514376704495168</statistic>
                <statistic aggregation='VarP' datatype='real'>5.6374489633444433</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>581019.16999999993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>3</ordinal>
              <family>Natality</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11734.0</statistic>
                <statistic aggregation='Avg' datatype='real'>29.044554455445546</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>56</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.659306845068047</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.639914507170078</statistic>
                <statistic aggregation='Var' datatype='real'>245.21389086799499</statistic>
                <statistic aggregation='VarP' datatype='real'>244.60692579158905</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>439630.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>4</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Male&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Male&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>5</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;F&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;M&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;M&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>6</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;American Indian or Alaska Native&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;White&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>7</ordinal>
              <family>Natality</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>375</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3978467.0</statistic>
                <statistic aggregation='Avg' datatype='real'>9847.6905940594061</statistic>
                <statistic aggregation='Min' datatype='integer'>11</statistic>
                <statistic aggregation='Max' datatype='integer'>193190</statistic>
                <statistic aggregation='Stdev' datatype='real'>21662.507117624958</statistic>
                <statistic aggregation='StdevP' datatype='real'>21635.680473131786</statistic>
                <statistic aggregation='Var' datatype='real'>469264214.62115198</statistic>
                <statistic aggregation='VarP' datatype='real'>468102669.53545606</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>228292190547.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>8</ordinal>
              <family>Natality</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>399</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1305683.8099999982</statistic>
                <statistic aggregation='Avg' datatype='real'>3231.8906188118767</statistic>
                <statistic aggregation='Min' datatype='real'>2876.4499999999998</statistic>
                <statistic aggregation='Max' datatype='real'>3535.0900000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>118.32396824573902</statistic>
                <statistic aggregation='StdevP' datatype='real'>118.17743695949804</statistic>
                <statistic aggregation='Var' datatype='real'>14000.561461418656</statistic>
                <statistic aggregation='VarP' datatype='real'>13965.906606316134</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4225469482.9424944</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>9</ordinal>
              <family>Natality</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>280</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11417.310000000003</statistic>
                <statistic aggregation='Avg' datatype='real'>28.260668316831691</statistic>
                <statistic aggregation='Min' datatype='real'>24.82</statistic>
                <statistic aggregation='Max' datatype='real'>33.049999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.7436611318757855</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.7415017983763248</statistic>
                <statistic aggregation='Var' datatype='real'>3.0403541428143455</statistic>
                <statistic aggregation='VarP' datatype='real'>3.0328285137479734</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>323886.07369999989</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.502075' measure-ordering='alphabetic' measure-percentage='0.497925' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pw97n50n71myl12ijzid0omt3s3].[avg:v_7:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0pw97n50n71myl12ijzid0omt3s3].[ctd:v_7:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pw97n50n71myl12ijzid0omt3s3].[avg:v_1 (Census2015):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_1 (Census2015):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pw97n50n71myl12ijzid0omt3s3].[none:v_2:nk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0pw97n50n71myl12ijzid0omt3s3].[sum:v_1 (Census2015):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pw97n50n71myl12ijzid0omt3s3].[avg:v_6:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0pw97n50n71myl12ijzid0omt3s3].[sum:v_6:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Mother Age + Median Age'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Mother Age + Median Age&gt; - </run>
            <run>&lt;</run>
            <run>Page Name</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;conneyc/s-17-dv-project-5&quot;' name='federated.0pw97n50n71myl12ijzid0omt3s3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pw97n50n71myl12ijzid0omt3s3'>
            <column aggregation='None' datatype='integer' name='[Average_Age_Mother (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[v_7]' peg='0' size='0.5' />
            </column>
            <column-instance column='[v_1 (Census2015)]' derivation='Avg' name='[avg:v_1 (Census2015):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_7]' derivation='Count' name='[cnt:v_7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average_Age_Mother (bin)]' derivation='None' name='[none:Average_Age_Mother (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column caption='Median_Age' datatype='real' name='[v_1 (Census2015)]' role='measure' type='quantitative' />
            <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;American Indian or Alaska Native&quot;' value='Natives' />
                <alias key='&quot;Asian or Pacific Islander&quot;' value='Asian' />
                <alias key='&quot;Black or African American&quot;' value='Black' />
              </aliases>
            </column>
            <column caption='Average_Age_Mother' datatype='real' name='[v_7]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pw97n50n71myl12ijzid0omt3s3].[none:Average_Age_Mother (bin):qk]' field-type='quantitative' max='31' min='26' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]' field-type='quantitative' max='22' min='5' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0pw97n50n71myl12ijzid0omt3s3].[avg:v_1 (Census2015):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0pw97n50n71myl12ijzid0omt3s3].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]' z-order='1' />
            <reference-line axis-column='[federated.0pw97n50n71myl12ijzid0omt3s3].[avg:v_1 (Census2015):qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.0pw97n50n71myl12ijzid0omt3s3].[avg:v_1 (Census2015):qk]' z-order='2' />
          </pane>
          <pane id='4' y-axis-name='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0pw97n50n71myl12ijzid0omt3s3].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='5' y-axis-name='[federated.0pw97n50n71myl12ijzid0omt3s3].[avg:v_1 (Census2015):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0pw97n50n71myl12ijzid0omt3s3].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk] + [federated.0pw97n50n71myl12ijzid0omt3s3].[avg:v_1 (Census2015):qk])</rows>
        <cols>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:Average_Age_Mother (bin):qk]</cols>
        <pages>
          <column>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:v_4:nk]</column>
        </pages>
        <show-full-range>
          <column>[federated.0pw97n50n71myl12ijzid0omt3s3].[Average_Age_Mother (bin)]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Mother Age Histogram'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;conneyc/s-17-dv-project-5&quot;' name='federated.0pw97n50n71myl12ijzid0omt3s3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pw97n50n71myl12ijzid0omt3s3'>
            <column aggregation='None' datatype='integer' name='[Average_Age_Mother (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[v_7]' peg='0' size='0.5' />
            </column>
            <column-instance column='[v_7]' derivation='Count' name='[cnt:v_7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average_Age_Mother (bin)]' derivation='None' name='[none:Average_Age_Mother (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;American Indian or Alaska Native&quot;' value='Natives' />
                <alias key='&quot;Asian or Pacific Islander&quot;' value='Asian' />
                <alias key='&quot;Black or African American&quot;' value='Black' />
              </aliases>
            </column>
            <column caption='Average_Age_Mother' datatype='real' name='[v_7]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <reference-line axis-column='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]</rows>
        <cols>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:Average_Age_Mother (bin):qk]</cols>
        <pages>
          <column>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:v_4:nk]</column>
        </pages>
        <show-full-range>
          <column>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:Average_Age_Mother (bin):qk]</column>
        </show-full-range>
      </table>
    </worksheet>
    <worksheet name='Packed Bubbles'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;conneyc/s-17-dv-project-5&quot;' name='federated.0pw97n50n71myl12ijzid0omt3s3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pw97n50n71myl12ijzid0omt3s3'>
            <column aggregation='None' datatype='integer' name='[Average_Age_Mother (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[v_7]' peg='0' size='0.5' />
            </column>
            <column-instance column='[v_7]' derivation='Count' name='[cnt:v_7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average_Age_Mother (bin)]' derivation='None' name='[none:Average_Age_Mother (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;American Indian or Alaska Native&quot;' value='Natives' />
                <alias key='&quot;Asian or Pacific Islander&quot;' value='Asian' />
                <alias key='&quot;Black or African American&quot;' value='Black' />
              </aliases>
            </column>
            <column caption='Average_Age_Mother' datatype='real' name='[v_7]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]' />
              <size column='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]' />
              <text column='[federated.0pw97n50n71myl12ijzid0omt3s3].[none:v_4:nk]' />
              <text column='[federated.0pw97n50n71myl12ijzid0omt3s3].[none:Average_Age_Mother (bin):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='TreemapDrag'>
      <table>
        <view>
          <datasources>
            <datasource caption='&quot;conneyc/s-17-dv-project-5&quot;' name='federated.0pw97n50n71myl12ijzid0omt3s3' />
          </datasources>
          <datasource-dependencies datasource='federated.0pw97n50n71myl12ijzid0omt3s3'>
            <column aggregation='None' datatype='integer' name='[Average_Age_Mother (bin)]' role='dimension' type='quantitative'>
              <calculation class='bin' decimals='-1' formula='[v_7]' peg='0' size='0.5' />
            </column>
            <column-instance column='[v_7]' derivation='Count' name='[cnt:v_7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Average_Age_Mother (bin)]' derivation='None' name='[none:Average_Age_Mother (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;American Indian or Alaska Native&quot;' value='Natives' />
                <alias key='&quot;Asian or Pacific Islander&quot;' value='Asian' />
                <alias key='&quot;Black or African American&quot;' value='Black' />
              </aliases>
            </column>
            <column caption='Average_Age_Mother' datatype='real' name='[v_7]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]' />
              <color column='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]' />
              <text column='[federated.0pw97n50n71myl12ijzid0omt3s3].[none:v_4:nk]' />
              <text column='[federated.0pw97n50n71myl12ijzid0omt3s3].[none:Average_Age_Mother (bin):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Mother Age Histogram'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Black or African American&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
    </window>
    <window class='worksheet' name='Mother Age + Median Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
            <card pane-specification-id='4' param='[federated.0pw97n50n71myl12ijzid0omt3s3].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Black or African American&quot;</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
    </window>
    <window class='worksheet' name='Packed Bubbles'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[:Measure Names]</field>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]</field>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:Average_Age_Mother (bin):qk]</field>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:v_0:nk]</field>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:v_2:nk]</field>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:v_4:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='TreemapDrag'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[:Measure Names]</field>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[cnt:v_7:qk]</field>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:Average_Age_Mother (bin):qk]</field>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:v_0:nk]</field>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:v_2:nk]</field>
            <field>[federated.0pw97n50n71myl12ijzid0omt3s3].[none:v_4:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Mother Age + Median Age' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Mother Age Histogram' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Packed Bubbles' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='TreemapDrag' width='192'>
      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
      qdn136qhAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
