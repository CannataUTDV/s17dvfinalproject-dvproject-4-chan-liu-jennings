<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10100.17.0118.2108                               -->
<workbook source-build='10.1.4 (10100.17.0118.2108)' source-platform='win' version='10.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='10.1'>
      <aliases enabled='yes' />
      <column caption='Median_Age Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='34.700000000000003'>
        <calculation class='tableau' formula='34.700000000000003' />
        <range granularity='0.10000000000000001' max='39.299999999999997' min='34.700000000000003' />
      </column>
      <column caption='Median_Age_Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='39.299999999999997'>
        <calculation class='tableau' formula='39.299999999999997' />
        <range granularity='0.10000000000000001' max='43.899999999999999' min='39.299999999999997' />
      </column>
    </datasource>
    <datasource caption='data.world connector' inline='true' name='federated.0nxarp917856aj1bumr8b1dzvqjr' version='10.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data.world connector' name='webdata-direct.1n6jco00yhulox1gcdozv0h7ck8f'>
            <connection APIVersion='' authType='none' authentication='no' channel='https' class='webdata-direct' connectionData='{&quot;dataset&quot;:&quot;conneyc/s-17-dv-project-5&quot;,&quot;apiToken&quot;:&quot;eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmNvbm5leWMiLCJpc3MiOiJhZ2VudDpjb25uZXljOjoyYTEyMDNkYS1lM2YzLTRjNWYtODAyMy1jYmFmMmJmMmRjZjkiLCJpYXQiOjE0ODQ2OTcyMTUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.aQy8F6cDXh9qhvq8i8ZW_6lUpHMEjXm2hfU_zt2kVKPBE_unlANG5RazcIf2Gvp9YZ1VeOuGmgJEw3W2qTHbJQ&quot;}' connectionName='data.world connector' filename='' increment-key='' path='/' port='443' scriptVersion='' secondary_whitelist='' server='tableau.data.world' urlQuery='' username='' usernameAlias='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Census2015].[v_0]' />
              <expression op='[Natality].[v_0]' />
            </expression>
          </clause>
          <relation connection='webdata-direct.1n6jco00yhulox1gcdozv0h7ck8f' name='Census2015' table='[Census2015]' type='table' />
          <relation connection='webdata-direct.1n6jco00yhulox1gcdozv0h7ck8f' name='Natality' table='[Natality]' type='table' />
        </relation>
        <cols>
          <map key='[v_0 (Natality)]' value='[Natality].[v_0]' />
          <map key='[v_0]' value='[Census2015].[v_0]' />
          <map key='[v_1 (Natality)]' value='[Natality].[v_1]' />
          <map key='[v_1]' value='[Census2015].[v_1]' />
          <map key='[v_2]' value='[Natality].[v_2]' />
          <map key='[v_3]' value='[Natality].[v_3]' />
          <map key='[v_4]' value='[Natality].[v_4]' />
          <map key='[v_5]' value='[Natality].[v_5]' />
          <map key='[v_6]' value='[Natality].[v_6]' />
          <map key='[v_7]' value='[Natality].[v_7]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0]</local-name>
            <parent-name>[Census2015]</parent-name>
            <remote-alias>AreaName</remote-alias>
            <ordinal>0</ordinal>
            <caption>AreaName</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_1]</local-name>
            <parent-name>[Census2015]</parent-name>
            <remote-alias>Median_Age</remote-alias>
            <ordinal>1</ordinal>
            <caption>Median_Age</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_0</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_0 (Natality)]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>2</ordinal>
            <caption>State</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_1</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_1 (Natality)]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>State_Code</remote-alias>
            <ordinal>3</ordinal>
            <caption>State_Code</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_2</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_2]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>4</ordinal>
            <caption>Gender</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_3</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_3]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Gender_Code</remote-alias>
            <ordinal>5</ordinal>
            <caption>Gender_Code</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_4</remote-name>
            <remote-type>2</remote-type>
            <local-name>[v_4]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Race</remote-alias>
            <ordinal>6</ordinal>
            <caption>Race</caption>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;string&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_5</remote-name>
            <remote-type>0</remote-type>
            <local-name>[v_5]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Births</remote-alias>
            <ordinal>7</ordinal>
            <caption>Births</caption>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;int&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_6</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_6]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Average_Birth_Weight</remote-alias>
            <ordinal>8</ordinal>
            <caption>Average_Birth_Weight</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>v_7</remote-name>
            <remote-type>1</remote-type>
            <local-name>[v_7]</local-name>
            <parent-name>[Natality]</parent-name>
            <remote-alias>Average_Age_Mother</remote-alias>
            <ordinal>9</ordinal>
            <caption>Average_Age_Mother</caption>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='RemoteTypeName'>&quot;float&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='KPI- Birth Weight' datatype='real' name='[Calculation_552535444342267904]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([v_6])/ 4000' />
      </column>
      <column caption='Median_Age Low to High' datatype='string' name='[Median_Age (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [v_1] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF [v_1]&lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='State' datatype='string' name='[v_0 (Natality)]' role='dimension' type='nominal' />
      <column caption='AreaName' datatype='string' name='[v_0]' role='dimension' type='nominal' />
      <column caption='State_Code' datatype='integer' name='[v_1 (Natality)]' role='measure' type='quantitative' />
      <column caption='Median_Age' datatype='real' name='[v_1]' role='measure' type='quantitative' />
      <column caption='Gender' datatype='string' name='[v_2]' role='dimension' type='nominal' />
      <column caption='Gender_Code' datatype='string' name='[v_3]' role='dimension' type='nominal' />
      <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal' />
      <column caption='Births' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
      <column caption='Average_Birth_Weight' datatype='real' name='[v_6]' role='measure' type='quantitative' />
      <column caption='Average_Age_Mother' datatype='real' name='[v_7]' role='measure' type='quantitative' />
      <group caption='Four Highest Birth Weight' name='[Four Highest]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[v_0 (Natality)]' member='&quot;Alaska&quot;' />
          <groupfilter function='member' level='[v_0 (Natality)]' member='&quot;Maine&quot;' />
          <groupfilter function='member' level='[v_0 (Natality)]' member='&quot;Minnesota&quot;' />
          <groupfilter function='member' level='[v_0 (Natality)]' member='&quot;New Hampshire&quot;' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Conney\Documents\我的 Tableau 存储库\数据源\federated.0nxarp917856aj1bumr8b1dzvqjr_0s1ofn51g2m2340zo49yx0d8qhnq.tde' schema='Extract' tablename='Extract' update-time='04/15/2017 10:44:01 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[v_0 (Natality)]' value='[Extract].[v_0]' />
            <map key='[v_0]' value='[Extract].[v_01]' />
            <map key='[v_1 (Natality)]' value='[Extract].[v_1]' />
            <map key='[v_1]' value='[Extract].[v_11]' />
            <map key='[v_2]' value='[Extract].[v_2]' />
            <map key='[v_3]' value='[Extract].[v_3]' />
            <map key='[v_4]' value='[Extract].[v_4]' />
            <map key='[v_5]' value='[Extract].[v_5]' />
            <map key='[v_6]' value='[Extract].[v_6]' />
            <map key='[v_7]' value='[Extract].[v_7]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='404' timestamp-start='2017-04-15 22:44:01.490' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>v_0</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0 (Natality)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_0</remote-alias>
              <ordinal>0</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_01</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_0]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_01</remote-alias>
              <ordinal>1</ordinal>
              <family>Census2015</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Alabama&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Wyoming&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_1</remote-name>
              <remote-type>16</remote-type>
              <local-name>[v_1 (Natality)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_1</remote-alias>
              <ordinal>2</ordinal>
              <family>Natality</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>51</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11734.0</statistic>
                <statistic aggregation='Avg' datatype='real'>29.044554455445546</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>56</statistic>
                <statistic aggregation='Stdev' datatype='real'>15.659306845068047</statistic>
                <statistic aggregation='StdevP' datatype='real'>15.639914507170078</statistic>
                <statistic aggregation='Var' datatype='real'>245.21389086799499</statistic>
                <statistic aggregation='VarP' datatype='real'>244.60692579158905</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>439630.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_11</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_11</remote-alias>
              <ordinal>3</ordinal>
              <family>Census2015</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>40</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>15290.899999999998</statistic>
                <statistic aggregation='Avg' datatype='real'>37.848762376237616</statistic>
                <statistic aggregation='Min' datatype='real'>30.100000000000001</statistic>
                <statistic aggregation='Max' datatype='real'>43.799999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>2.3772752618158943</statistic>
                <statistic aggregation='StdevP' datatype='real'>2.3743312665541798</statistic>
                <statistic aggregation='Var' datatype='real'>5.6514376704418288</statistic>
                <statistic aggregation='VarP' datatype='real'>5.6374489633367748</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>581019.16999999981</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_2</remote-alias>
              <ordinal>4</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Female&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Male&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;Male&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_3]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_3</remote-alias>
              <ordinal>5</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;F&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;M&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;M&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[v_4]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_4</remote-alias>
              <ordinal>6</ordinal>
              <family>Natality</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LROOT' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;American Indian or Alaska Native&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;White&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;root&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_5</remote-name>
              <remote-type>3</remote-type>
              <local-name>[v_5]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_5</remote-alias>
              <ordinal>7</ordinal>
              <family>Natality</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>375</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>3978467.0</statistic>
                <statistic aggregation='Avg' datatype='real'>9847.6905940594061</statistic>
                <statistic aggregation='Min' datatype='integer'>11</statistic>
                <statistic aggregation='Max' datatype='integer'>193190</statistic>
                <statistic aggregation='Stdev' datatype='real'>21662.507117624958</statistic>
                <statistic aggregation='StdevP' datatype='real'>21635.680473131786</statistic>
                <statistic aggregation='Var' datatype='real'>469264214.62115198</statistic>
                <statistic aggregation='VarP' datatype='real'>468102669.53545606</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>228292190547.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_6</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_6]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_6</remote-alias>
              <ordinal>8</ordinal>
              <family>Natality</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>399</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1305683.8100000003</statistic>
                <statistic aggregation='Avg' datatype='real'>3231.8906188118817</statistic>
                <statistic aggregation='Min' datatype='real'>2876.4499999999998</statistic>
                <statistic aggregation='Max' datatype='real'>3535.0900000000001</statistic>
                <statistic aggregation='Stdev' datatype='real'>118.32396824562495</statistic>
                <statistic aggregation='StdevP' datatype='real'>118.17743695938412</statistic>
                <statistic aggregation='Var' datatype='real'>14000.561461391664</statistic>
                <statistic aggregation='VarP' datatype='real'>13965.906606289209</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4225469482.9424977</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>v_7</remote-name>
              <remote-type>5</remote-type>
              <local-name>[v_7]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>v_7</remote-alias>
              <ordinal>9</ordinal>
              <family>Natality</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>280</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11417.310000000007</statistic>
                <statistic aggregation='Avg' datatype='real'>28.260668316831701</statistic>
                <statistic aggregation='Min' datatype='real'>24.82</statistic>
                <statistic aggregation='Max' datatype='real'>33.049999999999997</statistic>
                <statistic aggregation='Stdev' datatype='real'>1.7436611318757855</statistic>
                <statistic aggregation='StdevP' datatype='real'>1.7415017983763248</statistic>
                <statistic aggregation='Var' datatype='real'>3.0403541428143455</statistic>
                <statistic aggregation='VarP' datatype='real'>3.0328285137479734</statistic>
                <statistic aggregation='Count' datatype='integer'>404</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>323886.07370000012</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.536932' group-percentage='0.0653409' measure-ordering='alphabetic' measure-percentage='0.278409' parameter-percentage='0.119318' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Median_Age Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='34.700000000000003'>
          <calculation class='tableau' formula='34.700000000000003' />
          <range granularity='0.10000000000000001' max='39.299999999999997' min='34.700000000000003' />
        </column>
        <column caption='Median_Age_Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='39.299999999999997'>
          <calculation class='tableau' formula='39.299999999999997' />
          <range granularity='0.10000000000000001' max='43.899999999999999' min='39.299999999999997' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Crosstab + KPI'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.0nxarp917856aj1bumr8b1dzvqjr' />
          </datasources>
          <datasource-dependencies datasource='federated.0nxarp917856aj1bumr8b1dzvqjr'>
            <column caption='KPI- Birth Weight' datatype='real' name='[Calculation_552535444342267904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([v_6])/ 4000' />
            </column>
            <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_0 (Natality)]' derivation='None' name='[none:v_0 (Natality):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_552535444342267904]' derivation='User' name='[usr:Calculation_552535444342267904:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0 (Natality)]' role='dimension' type='nominal' />
            <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='Average_Birth_Weight' datatype='real' name='[v_6]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0nxarp917856aj1bumr8b1dzvqjr].[usr:Calculation_552535444342267904:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nxarp917856aj1bumr8b1dzvqjr].[usr:Calculation_552535444342267904:qk]' />
              <text column='[federated.0nxarp917856aj1bumr8b1dzvqjr].[avg:v_6:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nxarp917856aj1bumr8b1dzvqjr].[none:v_0 (Natality):nk]</rows>
        <cols>[federated.0nxarp917856aj1bumr8b1dzvqjr].[none:v_4:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.0nxarp917856aj1bumr8b1dzvqjr' />
          </datasources>
          <datasource-dependencies datasource='federated.0nxarp917856aj1bumr8b1dzvqjr'>
            <column caption='KPI- Birth Weight' datatype='real' name='[Calculation_552535444342267904]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='AVG([v_6])/ 4000' />
            </column>
            <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Four Highest]' derivation='InOut' name='[io:Four Highest:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Natality)]' derivation='None' name='[none:v_0 (Natality):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_552535444342267904]' derivation='User' name='[usr:Calculation_552535444342267904:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0 (Natality)]' role='dimension' type='nominal' />
            <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='Average_Birth_Weight' datatype='real' name='[v_6]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nxarp917856aj1bumr8b1dzvqjr].[io:Four Highest:nk]'>
            <groupfilter function='member' level='[io:Four Highest:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0nxarp917856aj1bumr8b1dzvqjr].[io:Four Highest:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0nxarp917856aj1bumr8b1dzvqjr].[usr:Calculation_552535444342267904:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nxarp917856aj1bumr8b1dzvqjr].[usr:Calculation_552535444342267904:qk]' />
              <text column='[federated.0nxarp917856aj1bumr8b1dzvqjr].[avg:v_6:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nxarp917856aj1bumr8b1dzvqjr].[none:v_0 (Natality):nk]</rows>
        <cols>[federated.0nxarp917856aj1bumr8b1dzvqjr].[none:v_4:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Crosstab + KPI 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.0nxarp917856aj1bumr8b1dzvqjr' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Median_Age Low' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='34.700000000000003'>
              <calculation class='tableau' formula='34.700000000000003' />
              <range granularity='0.10000000000000001' max='39.299999999999997' min='34.700000000000003' />
            </column>
            <column caption='Median_Age_Medium' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='39.299999999999997'>
              <calculation class='tableau' formula='39.299999999999997' />
              <range granularity='0.10000000000000001' max='43.899999999999999' min='39.299999999999997' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0nxarp917856aj1bumr8b1dzvqjr'>
            <column caption='Median_Age Low to High' datatype='string' name='[Median_Age (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [v_1] &lt;= [Parameters].[Parameter 1] THEN &quot;Low&quot;&#13;&#10;ELSEIF [v_1]&lt;= [Parameters].[Parameter 2] THEN &quot;Medium&quot;&#13;&#10;ELSE &quot;High&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Median_Age (copy)]' derivation='Attribute' name='[attr:Median_Age (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_0 (Natality)]' derivation='None' name='[none:v_0 (Natality):nk]' pivot='key' type='nominal' />
            <column-instance column='[v_4]' derivation='None' name='[none:v_4:nk]' pivot='key' type='nominal' />
            <column-instance column='[v_5]' derivation='Sum' name='[sum:v_5:qk]' pivot='key' type='quantitative' />
            <column caption='State' datatype='string' name='[v_0 (Natality)]' role='dimension' type='nominal' />
            <column caption='Median_Age' datatype='real' name='[v_1]' role='measure' type='quantitative' />
            <column caption='Race' datatype='string' name='[v_4]' role='dimension' type='nominal' />
            <column caption='Births' datatype='integer' name='[v_5]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <sort class='alphabetic' column='[federated.0nxarp917856aj1bumr8b1dzvqjr].[none:v_0 (Natality):nk]' direction='ASC' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nxarp917856aj1bumr8b1dzvqjr].[attr:Median_Age (copy):nk]' />
              <text column='[federated.0nxarp917856aj1bumr8b1dzvqjr].[sum:v_5:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nxarp917856aj1bumr8b1dzvqjr].[none:v_0 (Natality):nk]</rows>
        <cols>[federated.0nxarp917856aj1bumr8b1dzvqjr].[none:v_4:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Four Highest'>
      <table>
        <view>
          <datasources>
            <datasource caption='data.world connector' name='federated.0nxarp917856aj1bumr8b1dzvqjr' />
          </datasources>
          <datasource-dependencies datasource='federated.0nxarp917856aj1bumr8b1dzvqjr'>
            <column-instance column='[v_6]' derivation='Avg' name='[avg:v_6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[v_0 (Natality)]' derivation='None' name='[none:v_0 (Natality):nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[v_0 (Natality)]' role='dimension' type='nominal' />
            <column caption='Average_Birth_Weight' datatype='real' name='[v_6]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0nxarp917856aj1bumr8b1dzvqjr].[avg:v_6:qk]' field-type='quantitative' max='3586.0223542468657' min='23.768174772405814' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0nxarp917856aj1bumr8b1dzvqjr].[avg:v_6:qk]</rows>
        <cols>[federated.0nxarp917856aj1bumr8b1dzvqjr].[none:v_0 (Natality):nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Crosstab + KPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nxarp917856aj1bumr8b1dzvqjr].[usr:Calculation_552535444342267904:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' maximized='true' name='Crosstab + KPI 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0nxarp917856aj1bumr8b1dzvqjr].[attr:Median_Age (copy):nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nxarp917856aj1bumr8b1dzvqjr].[attr:Median_Age (copy):nk]</field>
            <field>[federated.0nxarp917856aj1bumr8b1dzvqjr].[none:Median_Age (copy):nk]</field>
            <field>[federated.0nxarp917856aj1bumr8b1dzvqjr].[none:v_0 (Natality):nk]</field>
            <field>[federated.0nxarp917856aj1bumr8b1dzvqjr].[none:v_4:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Crosstab + KPI 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nxarp917856aj1bumr8b1dzvqjr].[usr:Calculation_552535444342267904:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Four Highest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Crosstab + KPI' width='192'>
      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
      97jXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='144' name='Crosstab + KPI 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Crosstab + KPI 3' width='192'>
      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
      YPy/bjYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Four Highest' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7EAAAOxAGVKw4b
      AAAgAElEQVR4nO2deXAdx33nPzPz7hsPD/dNgOBN8ZCo27It61biWIdjx+skzia1TrKbZO//
      spU/slVbu5VkN9l4q5ysU7aycewqx0ocW5clS5RIiSJFkSBIgCDu+3549zHH/gEQBPCOGdAk
      RRD9UamK74fp6f7N9He6p7unf5JhGAYCwTZF/qQLIBB8kggBCLY1QgCCbY0QgGBbIwQg2NbY
      PukCCAS3GjWfJZtTsTtcQgCCbYYW5XvffIl8IIS/ql0IQLDNyCWYjMp84flnaIq4kcREmGC7
      MT/Szauvv0XCt1e8BAu2GYkZBmIOHnvqUWJjV0QLINhmqGnOfnCCwZkUhx78jBCAYHtzW3aB
      hCYFt4rbUgCqqn7SRRBsE25LAQgEtwohAMG2RghAsK0RAhBsa4QABNsaIQDBtkYIQLCt2XKr
      Qf/s+++TyV2bJ7h/XxOPHGr5BEsk2MpsOQGcujROMpNf/d1QFfgES3NnkczkmVlMrLM1VgWw
      25QblsdPzwxy6tLY6m+v28HvPX/vDTs/wPhcjFxeu5aHy0F1hbfosVtOANuVN04P8MGl8dXf
      PreD33/hxlac7sEZ/vg7x9fZ/vLfPn1DHzLD01Hev3jNj5DPVfb4XF5jdHZpna0u7MfjspdM
      8yd//z5XxhdWfz94oIn/9OUHix67KQGcOtvFzrYWKkK331N3IZZmIZZe/S3JEu31FSWPjyYy
      /MUPTq2zPfepPextrSqZZnw2Rjp7rfvlcdmpj/jLlmtoKoqq6qu/gz4nVaHiT6NyjEwvcWqN
      ACr8yxVnKZHhz4v40d5Qweh0bJ29PrJccV567TxDU9FVe3tDmC8/ur9k3l3907z8Xu862x+8
      eB8+t2PTfpQir2oMT62v6DVhLwuxNP/uL15bZ//DX/sUR3fV35B8LQtA03SuDIxw/OQZvvYr
      XyAcCt6QAtwoXv2wn+/+9MLqb6dd4Xt/9CKartM/vrju2JoKL7m8xoc9E+vsnz7cWjaPb7x8
      mq6BmdXfRzvr+MNff6Rsmj/+znFmFpOrv5+6t4Ovf/5u/vt3T5DJXuvKPXigmc8eaWM+lmJ+
      6ZqQZVmioyFc8vw5tYgfh1rxuOz8+79cX3H+y68/wpHOOnpG5tb5oenlFx/OxVIFeeTV5S7G
      //juCdJr/HhgfzOPHm0re75iRBOZgvL+hy/dT3N16Xr20mvnGZy8dm/b68P8ymMHSh7fNTDN
      D4/3rLOZCiCZSjM7v8jA0CinznaRy6n8zd/9kH/5lecIBso//X4eBiYWVy8yQMjvoqbCt+nz
      pLMq//Ebr6+z/e4X7uFQR+3PXcafh4/7pkikc6u/W2tDALz+4QB/t0bIDrvC9//oxVtePqt8
      3DdFfI0fLTXLflwenV+3qjcS8lIZcN/QvHtH5znfP73620zI87E0p3sn19lMBZDJZPn2915m
      dnYB3TC459A+Hjh2GCTpOottjf/60nFmo6nV30/ft5N/9YtHb2qeVxmbjZFIXbupbqeNlpUK
      Woyekbl1rQ/Av3nuGJVBz00r4+3Of/4/b6CvEcBXnzjIC4/s/QRLVBxTAVSEAhzc08nbi6dx
      uZx86bmncLvKv7hsdb79yrl1L5y7myP8t69/ruTxS4kMZ/um1tkya0YhBLcvphNho+NT2O12
      fvtrv0xzQ90dX/kF2wvTFiAY8PPkZx9EURSaG+quPyddZXZqgmgyT1VDEx5Zw1Ds2I0csZxM
      0Ofi5naqBIJCTAUQCl570XW5nNedkaFmmF9KgJHl4zM9dLR4kT1hUuNXUOp2ETQZDxYIbga3
      bC2Q5PDRWFNBLpPHHw6gaDkGus+yaK+muSoAhoGmaWiahq7rBekNQy/6qaShL9uLpVFVFU0r
      7Ivrul7cri2fa+M3yQZGcbuxbNeK5K1r2nJ5S6SB9XZ9xV7KD93YYDdK+6fpWkm/y/pR7Fwl
      7oe24t/GcRe9xH1azbtgpKZ03rqmF7+2Jn6Usuta4bksCyATn+Dc+VEwcnSdPEPCPElhZrKC
      y+OFfAYNCUWRUfO5G/IR/Ka7T8USSMX/ZnbuG9p1uwEnk1b+K/f3ovZiI3uSVKJQmyvoap4l
      khXPu3wuN+KeW5oIy6Ym+cG3v83ZYZ2ze6pZSgf5zfs3NySZTUQZHJnAkCC+lCQSqqRlzyHy
      UwP0jy/Q2VSJoiyvOSn2xJEkGZutsLiSvGyX5EIt22w2FKWI6mUZRS5c3yJfPVfBlZKW7Rtu
      kiQt2+UiecuKslzeEmk23g356rmk4n4U2KWr/hX3Q1aKlGnFvwKBl/FDkWVkubDmKMrVa7Uh
      j5L3qfg1vHpti15DWS5pL3dtN3OfLAnA7gzz4GOPUTmYo7OzDm8owmZHuO1uL9VVERJZjab2
      WjyKgSHbsAf3EUsXVlKB4FZgSQCy4qSmtpbXfvT/6O/34gns4IV/8SSbmZeVFTtVdY0UrrSx
      Ebx5E8oCQVksCMBAU1Wy6RTh9mM8++R9SJJM6bV4AsHWwYIAdHree5W3LwwRT6b56/FuPMEd
      vPCVzbUAAsHtiAUBKOx75Fl23R/n1DvHWcwaSJLE8PAM+1qqb34JBYKbiPVh0Ngk/eM5Ojua
      GL9yhbdfeYv4zSyZQHALsPw9gM3hIr00xcSEh5QqU+GTEcu9BFsdywJw+ht5/vkn6BuZ5pe+
      8ssEnAq333dhAsHmsCSATGKcjz4eYfJKL3FgeCLFs89/VuypItjyWBKAw13FgYN+2tuaUQHF
      5kYsXRPcCVh6iMuKA7dD581/fImTXeOc/uA0efNkAsFtj+VeTDoxRYogSjpLenKOlHkSgeC2
      x4IAlpcpewKNNERkLp57B33HLkp/ISsQbB0szgT/hJ91j+LzBdh9qJE9HQ3oiI1FBVsfC3VY
      Ye/DT/O1r7zA3uYIi5OX+ecfvHVd3wMIBLcbFlqAPG9+6094uU/nuec/z+dfvAe3x8vm9zYT
      CG4/LAjAxkO//DvsmZuhr/ciP7n4IZKtiud+5WkhAsGWx9I7wMTlcxw/e5FoPI3idNPQFubG
      7RcsEHxyWBCARLC+nWdaD+B2u3A5HeSSc0wOzdHWGrn5JRQIbiIWBCATrlm/H1AqOsaFS4oQ
      gGDLI0YyBdua6xKAJCnYbEI7gq3PpgJkaPkc2byKs2Inn/vs9e8SJxDcLlgWQGpxgG/8r7/F
      X1eD29/KF778uPgwXrDlsbQrhJrLkc0atB5+gKc+dz+SpCCe/4I7AUvzAJc/eJN3L42g6wYv
      vdSPO9DKF770uNgVQrDlsbQrxN6Hn6Jl3xVOdal85lOtHH/5HfE9gOCOwOInkcP81Z9+g65p
      nRPvVuJrPMKNDdApEHwyWBKAy9fCb/zBb/HemTxPPl46Cp9AsNWwPJjv8lSTXbjA0OwSiUSK
      TW9na+hMDXTxyk9e48pklER0gVgqQz4xx/B0tGCfeYHgVmBJAIZhoGlpsokkb7z8fV7+5xOk
      zZOtJ5ckoVTy6KMPsnClj/nYIvFUku4Lffh8HhEeSfCJYEkA6dgwx9/tZmF2ltnZWeYXlja/
      KZbTT3tTNVNDV/A2NONSE7z36isYNR1Ueh3ouk4+nyefz69EVlmfXNM0stlsQUtx1a4ViUqS
      zWbJ5XIFdlVVi9vzKtlstiA+gWHoRe26vmzPF8k7n8stl3dD8A9N14rbr/qxMVKKQVG7YZT2
      L68uX8dCv/NF8171o0ia3NX7sdF+1T+K+7ERTS3un2EYy3nnipQ3r5bwY/k+GSXux8ZoOlft
      ar7QD0vvAG5/Ew9/upbPfO6zpFNJbC4vmw55bKgMXLyAvWYH+6oCTI8kuPfBexiZGCXTFMFl
      2xAMYUOToCgKTqezoKW4aleKBGVwOp3k9cK2xWaz4XA4Cu12G06nsyCQgiTJRe2yvGy3F8nb
      7nAsl3dDsAZFVorbr/qxMeCFRFG7tGJ3OApvqt1mx24vnKa02exF8171o0gah91eNOCF46p/
      FPdjI4qtuH+SJC3nXcQPm91Wwo/l+7QxKMpVPzYGE7lqt9kL/bA0D9D9xt/yw/NRQo4ced1N
      3lHF7//OFzc1GabFpzlz8TKeoTH6w010NARwBKrYr0xwsX+Cw7saRDdIcMuxIACViSGFX/u9
      3+Cjb36fI19/ka5v/YgoULOJjJRAA1/84hcL/xAOULGJ8wgENxJLH8Qgz/KtP/1zYiNTnPvT
      KbRYgGM3v2wCwU3HggDsPP6bf8Djayy6rqLmVHBsajGpQHDbcV2L+qMTXbz604s3uiwCwS1H
      fNUi2NZY7sMYhkEmGUdXnORU8HrFgmjB1seyAHLJaf7mf/8Fvp1P4ErO8NRXn7+Z5RIIbgmW
      BaBm4zh8tUiJJZLJrAiPJLgjsPwO4Am1cPhgK6n4OK333y/CIwnuCCwLIJdZpPv8ZbJahg9e
      +wH/dLxr8ytCBYLbDOsCSC/irr+Pf/27v8mumhrmLl4gejNLJhDcAiy/A7i9VWSnXuWv/+95
      krqfpkhIfBgv2PJYFoDiquCZ519gdGqBUFU9dbXhzW0qJBDchliuw5nYGN/5q28S1yIEa+v5
      2m+9KAQg2PJYrsNaPk2opoMKuwcjqZIDPDexYALBrcB6pHhfHXc/cD/xqV4WHW34b2apBIJb
      hPUWIBejp2eIx59+Eqcii0VEgjsC69142WDi43f486FeqiPtfPGrT4ud4QRbHutdIG8DX/rt
      r6M5gyhoIj6Y4I7Ack8mG5/ge9/5a9742Tne/sc3iN/MUgkEtwjLLYCu5bA5fSSmRkkYBZs2
      CARbEssCcHjCtLU0MZuS2XPsYTEKJLgjsNwFMgwD2YBkOs7s5AyF2zEJBFsPywKQbS4a23ZQ
      Yc9x5tQ5Cvf+Egi2HtY/iMktMT6V4NAjn+ex4HXsDCcQ3IZYagF0LcfCbBy7LcHL3/4rXvqH
      tze/Oa5AcBtioQXIc/y73+T4tMwD995FpbOex3/1GfESLLgjsNACKOx58FGOtoW53HWG/olh
      LveOULiVqUCw9bDQAshUt+7mqdZdqNkUo8NDTM8ukKVlk8uhDbLJGPOxPDV1EdR0CkNxYDey
      xHIyIb9bzC0IbjmbqMMSNqeXts59tHVeR05qmsHBMRYXEgTrIiRmJ9E8YZJjV3A07CYk+lSC
      T4DrWNSpE1+Ibj5KpM3D7v37qPSv7MuvZbly/jRLzhoaI34wDDRNQ9O0gkAUAIauFw3UcNVe
      LI2qqkUDZ+i6jqYVsWvL59oYQMIwjKJ2fcWuaYV5a5q6Euij+Lk2RgDRdaOsHxuDPmAs21W1
      cIMaTdcKA20AuqaV8E9f8aPIuTQNvah/K+famIdR/D7pK/dpY1ALMMrkrRf3Q9/cfbpqL+bH
      dQhAY7Cr9+cfBZJknG4XuWymoMDFj6cgsMPqn6SNYRrW2MukKZmHtPHY4sdLq3kUO9X15l0k
      H0mi2OKTUv6VzHvl+MK/lbJz1XnLeVMi79UybeJcZnmUuueFRxe/r7CpeYA4p987QTRrIMk2
      7COzBJqrrCYHNcOV/n76h4ZI+kJEbHaaOg+gzgzSNzbP7ubIavSQYk9BSZILo6cAkrxs3xgt
      BJajlchF0siyjCwXtyuKUhD1BKRl+4aLK0nL9o2RYwBkRVkub4k0G++GfPVcRW5gUbu0bFeU
      InnLcvEyySWuYRk/FFlGlgvLdO1abbCv+rchD7n4Nbx6bYuXVyppL3dtC/Iod58KLCXIxKe4
      PJSgtamGoUuXeOsnb25uRaik4A8E2Xf0KNV+H5G6RiJBP00799IQFl8WCD4ZLLcANruTTGKO
      ufkgWc1GyC5vbihUsVNT11jsDwRE/Rd8QljfFsXhob25npTq4Be+/CJBp43gzSyZQHALsL4Y
      TnETCtoZG7zM2Y/68IRD4rtgwZZnE8uhdVQNZC3LxNSM2B1acEdg/YswPYsz2MgzL9yHTdMp
      jLIrEGw9LLUAWj7D6JVBBq58yP/84//K37/+ofggRnBHYGk16Bvf+jPeT1XzS089hDaj8PCX
      Hxe7QgjuCCy0ADYeeO5XeXRfhJM//TGney9w6v1u0QII7ggsBcr2R+p56LFf4P7P5FlaXGBu
      Ji5eggV3BJtaDarYHISraglX1d68EgkEtxAxlC/Y1ggBCLY1QgCCbY0QgGBbIwQg2NYIAQi2
      NUIAgm2NEIBgWyMEINjWCAEItjVCAIJtjRCAYFsjBCDY1ggBCLY1QgCCbY0QgGBbIwQg2NYI
      AQi2NUIAgm3N5qIc3SIMw8Bpt+G0X9tm26bIK3YFdU2gA5siYRgGNllad7zLYVuNO7DWDqCs
      bPddYJeWz2W3yev+5rDLK3Zlnd1uW7bLklRwLmnVD6WkH3m10K4o68/ltCvL/ilyUXsxP2R5
      OWZBgX3FP8dm/JCWt0jfaOeqfw6FXBE/XA4FTb8W98Emy2X9kIr5sRIfoJh/y35suE82pajd
      vmJXivlnWIpOcWvJZrNF93LXdX3VrmnaungCZsev/W0YxvIN35Bmo91KHlcvnyRJ6Lq+GtRh
      7b9vpB9rj7fix8ZjrORxq/0od22L+bH2mm8mj2J+3JYtgNPpND2mVLCHUpSqLDcyj3KV5Ubl
      cSv8vlP8sJLHbdkCmGOQz2XJqzrICm6nw9LNMgwDfeUiWrm1hqFjGMtRaG5OBMtN+GEYq/G4
      1j4BrVVSY6VSyxaON1DzOXJ5DSQZl8tZNGrN+qIZy+GXLJTk5+PG+3FbtgCmZOb42Y9eYUgP
      4cDGV198svzFNzSuXOrD59O4NBhlz9H7qPWVfzLkU4ucPdcDElTv2EdrdaB8mQyNkUsfMSXX
      Uq2kqW3bictmcpOyc/zsn15hSA/iwM5XX3iyaLyxZXQmJqZQE3NML2VBUmjt3E91sHxrGZsd
      ZS6hMzM+iKd+Fwd31JUvUz7Gydfe4NKSgV+x8/TnnyHoKl9Nxvq6UP0N1FcGcdiLhUHa4ImW
      pfv0Sez1+1ByKXa2t5QvExCbG2UuvuJHXScH2+tN/Ihz8rXXV/146hefIeQu9GNrjgIl58n7
      q6lr3E2lvyAQYyGaSt/YMAPdY9RXywxMxkyzmBruxVa9kyN7mrnYe8W8TKkpLvZPMbWYYGZm
      lFjKQhzNNX5E/BvjRm5EprKykqqGNnbu3MnOnR0EPXbTLJZmx7gyNIhk9zE6PmFepkychOKj
      obGD5joP2XxhvLaNNO3cjzc3wwfvvc2Jjy+TUcunyc72MjwVY2IxTd/QoHmZgNjsGFeGhpBs
      PkbHJy34EVv2o6GDljoPuRJ+bM0WINzKof0VJJamyYX3UCSG23oUB3fvamMy76bamycSMo9t
      EwxX0dPdQ9esTmVlq3mZnEEqnBo9E/3IXi97TZ6aAFRsxg+DRDKJll5iMZEDWaG2wYPTXv4Z
      Vt2yi2h+jLrGBuryFnq73iru2n+ATDpKMt9GyILIolMDXJmIUVHXTotrjlP9UT61K1zyeJuv
      Grt6npmBiwQi1nYZjDR0UJ2ZoKGpgaqMhY05fdUcOWAjmVogmW8j6C3ux9YUQCqN5A/SUVPB
      5YFRS0nsdpmJS11MSnb23lNHpdtd/EBDJ5vNovhqOHY4TF438HgtBDFTVQIdx3ihJojL7Vkd
      ai1FPpchr2r4g15CFR3ohomKJZlIOEx0Msrw0ABIdryRRkIlbiyAms+iS04ampZjs4X8Fvb0
      1jSi8xOkJD87WmpRLHTs4xmJo8fuQYtNMJPp5FOt5buLNk+EBx59loyq4fWZR0g3DIP5qRGc
      1TupcGboHpxlR2NN+US5LBnFwY6de5mZHFuOEVwsYqhp7rcjHh/T5z/g7ffexe6PUDQA7Fr0
      HB+cvUxGcbO31kksX+Z4XWN+ZpKPT77JyfMDTA1e4mdneszLZLMzN3CJuUSWVCqNrpd/2iYW
      Zxnr+YAfvn6GsbER/vm1tzBJAnqeD872klZc5n4AWi5DMr7EQF8vl3p6mYkmzf1QnLS0d1Ih
      LfLKT98lmTV/2oY8Eid/9iYf9i5QW21eoTOzPfz4+HkWF+aZnIuaHp9eGOd8dw/d589y+vxl
      AkGTFlxXWZoZ5lTXZebn5+juvkCihB9bTgAT/V2cOPkhyXSU8YU801NTmPWekWQiwSBVLp2h
      xQxSuZcGxU598w7aWxupqKyipakOCfN+MIZETX01i5OjDI1Nki8SlXwtFTVNdHa2Ew6GaGxq
      xuO08Khd9cNgeDFj+vLj9AaRc4tEc3aqfDKj0/PmeeRivPnqq0Qd9fzCE4/gc5UZLMhEOfXB
      Sbr6p5icnkZS40wvmItMdnioCASpra2lOmwyuAB4Khs5cugghw4f5dg9h6n0mQyT6ypLiTSK
      nmV2do7Ou+6n0lc8ptHWHAY1VFIZnXxynqzipyrkLT/yYBhk0hkkKc/kTJz6xnocJm27nk8z
      ODiMZkCwppmakMe0TEPdH9E9Oo/kCPDIQ/fidZbpYRoGBgZj/T1kdAncVXQ0Vpr4obO4MI9k
      c+J0uXE7zfvnk31nGM5Wsacyz/uDSZ544KCJHzrpVIKpoV5O9Mzw7NNPECwyerKWVDyO3eND
      VpOkceNzlhaNYRhoyQW6+kaQZRm7P8LeHQ1lz69mk1z86F2WvJ3sDKT5aDTL0w8fNvFDpffc
      GeJ50OwVHDm4E3uxgN/lz3KbstTPWx/1cOLkeU6cfNdC1yHHO8ffpff0CYaGL9E1ljDNQs1l
      mJ0Ypq9/kP7RafMyJaa4ODiDHmyi0pEjZ9ZoZJeYmJxiJppkMRpnMRo1a8cACYU8Q1cuc+rE
      cYbnUqYpalr2UCEtMTqf5uiBTnM/1CzjY6Pk3HW8+EtPmVZ+gA/fP0FK1dBme3mvd67ssXpq
      geloinw+TzabJZszjzat5bNkVRk9mySpe3j47v3mfiSnubLo4PDdxzBiQywmio/Kbc2XYGcQ
      af4EgdZ7yS/2lRk7X0FSCLsMxjIB9jdJxB3mT87pkV6m43kam9uIZ9MWyuSlsrKKZGaOqGaY
      Twq5QjQEMyxm29jXGjH3AcDQmRjqJ2UEqK5vJuI3nzE3JJma+iZkRUYxGTECQLGjphIktCQf
      xZIcPdhZ9Mm5ls7GMB+f70ZZmmW3SeVUvJXUe8KEAn4yeQ3Z7jItktMX5tDRuzn14VmoCjI5
      M4e/xWQ+wx2mUuqlq+scCSOIr4SQt6YA3DU88sinSec1tPpD5pVNUth35Bg71OXX5Rq/eYxL
      j6+C6kqd2Pw0BEwmXQAkF207d2B3OPF6vDiKLB4rwO5i5MIHhH1343I4qQiYdOUkiUhdE3Ii
      w9TEGBW1zXjLdDcApgc+5vyUjc6mME5/JV6Xie+pafqjTp789F2cOv46i8k2qk2uV6hpJ53R
      OHpTLaFy7wwr5JdGePPVd4g6q3A7fbzw1EOmaWZG+5hfSuJLZ5iYi9NpJgDZwYG77yMZm6Gy
      xo+zRJd3awogPc17b7zJuFKFU9P40nNPlBeBnufdd96mcdd+nDYbisuL01b+aSgrdho776Iu
      5ESWLVRmxY6RiTE0PMdMXOPB+4/hM50LsLGjvYHZiQkc/goqAubDlGouxfxCikhNrel7DIDd
      4cHrsRMKhbBZWGOFO0xE7qXr/MekCOG3MJ+RWJxjZiFJdKgbx4GnuX9HqOzxWmoJOVRDrb+e
      TKJ8l+kqwXANijbIUF8fVTv2midITvH2mTG86SgpRcJ136epKiLkrSmATAzNV0XEXY+RGFke
      DClXFyQJn92JKxAioEg4TCo/gE3WuXjuPI67OnG5PAR9JeYNrqKm6OsfxhOuoX1HGJeVFsDm
      ILG4gN3tZCllPnwIEsFIAx2eLAYSbkd5PwxDxxuqJpSYY3JyEk9FLQFv6S6Hls+RU+HAPfeS
      zWTZ2enBabacA/AGK6lzBqiSo1xMmYdPdFbv5J7DdSSi80hNFioz4ArW8MijTzE3N4PfSogu
      hxdPZhYqd1HDNDal+LXacgLQdQ3D38Thu0KkYvPklQPmM8GSQtvuDhYX5sjJCorbb1pB7Z4g
      jTVpZqenCVTWmQtAcdHa2kYqucTQ6Bj1ddXYzFY7Lg0yadTx7OEOfvzKj9H3tpSfeDI0Lp45
      xbnxOZq9dhofeJbdVaXzSMfmWYynyWSW32Fkb/kXzmR0hpHpNePydg87d7QU/RZgLYtzk8wn
      NAwtwF2dpWeA0TV6zp0iqtpxrFRIm2Qt4O70wDmuzBuoqQTZiQRPP3SofAK7j8aqIOOKglcJ
      lOySbjkBzIxcZnR2zSiO2/yFFkDR8/RdvoxNseOqbLAwxa8TjcZx2AzsQZNZRwBDJxmfJ646
      aawNmc4EA+BvwJ9+n4tdMZwVzeYvwobOQlqnPhKhtdrOQiIHVSWe6IaByxem1hemtqF52WaS
      QaCqkf1VjeblXoOuawyMz3L0nvuR5i5yamSRR/ZUFT9YkvAGAixMzEJFAzWRIBUVFZby8fiD
      JK4M0L6zk4W0haUQqWmujEfJRSrx6LMk0jm89sIu4JYTQG3rHmpbl5v3RHSBpayFRHqeM92D
      GO4AB2ttLObMBxxnxwdx13VyMJLltfPD7GqsNE2jZlKMTU2hOAI0NjWWfc/QdQ1DcvPQpz9F
      Jpuj0+02f5mX7Rw7epS8kWEhmmVPQ5klGnqOgcs9y+uGVvBVNbOn1YKYN8HsaB/9AwModjeS
      mqV9f5munCTT1L6Pxh0GsdkRui510+Os4tH7zIc1feF6Dh32AwYVVeZruXBVUBu0cXF6iAV/
      kL0lHpRbTgCp2AKLi/MMjkwzPD7KvQ89Zp5IUmiIRMgYGYYW81TXmr8DhKsb6L/Qy7lZg/q6
      dvM80rMMT8dQKtuo1mbImzykZkf7GJmJXzO4Kzi6r72kCLT0EoPjs+hqlqxuw+20o6salHoP
      kBTCkRrcgWsFcXitdTc2Q03Lbh77tA3ZFcRhk3GXmzcwDKLzU4wND5NSfNQ0tNHQbK3F0XIZ
      lpaWyC7NMK6GePZhky6Q7KR59xEiORWnx4erRN9yy02EDV44RfdojNb2nXj9Qbe1798AAAca
      SURBVFrrwhY+jpAIN9Rz190P0NpYh08uM0tlGGiahjNYxwP3HmH3waMc2GHhqekKUFtdR0id
      J64qpl2gqWiag4eP4nI5OXzkKPfs7yj74YlsdxGJRPDm5xhL2olUVuIyGdfXdX3D/zdn0n+4
      r4eFWIJUKkWu3FJoQ2eg5wJR1YYDlWQiyqCVSUaW/Q8EAkQilZgufQFIzfDOh92oukYmk0Ev
      seBhy7UA+x54grbYPBMTc7iMLGd6Rji2t8Vk/FzGI6d56/XXqWrdx8FwmWUNeo7Byz1Ek3l0
      TUUzIFTbVrbroOsauuTl4JG7MAwd3ZBwmFTOublZdN1gcmqSXXvMuwCSzUko5ESJenDbAoTM
      lnQbBvlslkx2zYuvw3zW9Xrw2e1oNhs2m6288GWFI1Za7CLoapZEIgE4OHZgh3kCuxOPZCDZ
      7NhstpIt65YTAEh4AhE6AhE6du8mk8mUPVqNT3Oqqx90jVgqjX9pivlYNTXBEi+PipOOPXeR
      jk5ypmsAlx0Mk3mApekR+sfXLDRz+Ni/Z2fZkaaGSIBL3V3IskJ313kkd4i7dpUW8tX1M1o6
      ha4P8vH5KZraOqksNUklKwTClXi0a08+xcKs6/XQvGcfc/Ec6XQep9/CwsHrIJuKMjE1Rzjk
      Yymeojpk0p2TvezZ20Y+kyZtM0oul9mai+E2i57n3PlL7LvrIBaGtQEYvfQ+s46OlZfgaZ5+
      +IhJCoNkdJak4cEta3gCQUtr6e8EohNXeOPjET6zu4rFYCcdlRYm3DbJRO9pppQWjnSUGGHa
      iKEyNz2DJtmQbHbCoWDRuYAt9w5wXUgyzuwM7310ifHxCZJZ865AZU0T8fFezl0apLGx/GpF
      ALILfHj8OO9cGKLnwhmiVj6JvEM43zOETAannKF/3Hx9/6ZQs/R2naZvfJGJy2c5ceIEXVcs
      fNqZmuXdjy6TU/OoqlbyrWELdoGuB4nq1j04Uznyan55F4aSDymDfC6HM9TAQw9Uk1dVZMV8
      7RC6hirJqKkYUfKmOyncSexqqWXy/GU+6J5h14Mmy603i83JrgN305KMktZdBF0G83ELDxe7
      C7eRJ68ZSGUGPbZFC6DrKpqmk12a5kLfSPnl02qKM6cvkAcUmx05G+X0xX7zPBwV7N27m/aI
      h1133W1pGfGWJ7VAd/8IoZa9PP/M0+za3YKWtjIxs3nmR3sZnE5gZJY4fdFkkwLDQJdc7N3X
      jqHmyOXVkt8O3fECyC0M8g8/epOFlIqipwg07iFc4usgYHlGN7FEZmUgP59JkkiXX9+SjU/z
      7rvvk5Q8eKQM03MxKwN1Wx93iBpnjtOnPuTc2TPMqkFaaqysado84dpmkhO9fHyxn6ZGk7kD
      NcXUXJR4PMbiwgIL0di6bRrXcsc/pmzeKu4+BDPjY6QTMZa8s2TVcOlZWruPuw+20fXBeygO
      O6pm48jB8s360OXLVLfvZ2djBbQ2cuLtt4imGqks88H6HYGWR7V5afSOc3LKxaeaFFJZlYDF
      5SmbweWP0N6SZCmt4veU75JmsnkwDEKV1YQAFAf2O2o59CaQnT5aWnw0N7eSTiwyuxAjk1Vx
      2kpdRIlgbRsP1rSi6wayYr4rnGroqIkoExPLi86yxvIk1B2PBIqi4KrdzWdWFmhaWQJ1PcyN
      9vD+h924QtXYoxqN1aWXXM8MXeL8WJzKympqqipQ7HLJLtD2GAa9yWRTMZYSa+YjFDvhUAjb
      dhkHvQVM9p3h3MA8Xp+fmO7imTLfBBuGTnxxnmhsiampWez+KvZ0thWdl7njW4BbgdMToNpj
      vruB4PqpatnHAzVZFudmcVWU/xpMAjC05X1BDQNJkUuOygkBCLYE0alBxqI60Zlx7FVQU9FR
      8tjh7ve5OJmjKlJJdX0jNoer5EpwIQDBliCfSTAyMkN9XSNz8fJ7u9a1H8Rbu75LWqoFEO8A
      gi2BlksztxDD4bChKS4iwRuztFu0AIItwcLkABNRg+jMOLaqNh4+ZGGPIwvc8RNhgjsDNZdm
      ZGQIf7iWZMLCHqcWEV0gwZZAy2dYWIzj8/vIawYBn8lWlRYRXSDBliATn+fMe++ypNqoaN7L
      4/fuuSHnFV0gwZZgcXqUvMPPzt17Qb9xC+5ECyDYEgSrm+jQfUSj81RWNt+w8woBCG5vdJWp
      yXGSGRWHy01VtRNX8MbNugsBCG5vtBwDfZdJG3Zq6lupDgdwmG3wuwnEKJDgtkfXVJLJOIvT
      E4zORPHXtHKww8JnqhYQLYDgtsfQ88xNjhNNZVHsbmoi5Xef3gxiFEhwe5OL8+ZrrzIyn0Sx
      uwiHfGSz5jtQW0V0gQS3Nytha9d+0ijb7LgsRPmxghCAYFsjukCCbY0QgGBbIwQg2NYIAQi2
      NUIAgm2NEIBgWyMEINjWCAEItjVCAIJtjRCAYFsjBCDY1vx/1RVvI5ItTqIAAAAASUVORK5C
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
