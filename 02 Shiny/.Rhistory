install.packages("dplyr")
install.packages("extrafont")
install.packages("ggplot2")
install.packages("ggthemes")
install.packages("gplots")
install.packages("grid")
install.packages("jsonlite")
install.packages("lubridate")
install.packages("RCurl")
install.packages("reshape2")
install.packages("tableplot")
install.packages("tidyr")
q()
q()
install.packages("tibble")
install.packages("rmarkdown")
q()
source('~/DataVisualization/accessDataWorld.R')
source('~/DataVisualization/project1/conneyc-s-17-edv-project-1/connieliu42RESTaccess.R')
source('~/DataVisualization/project1/conneyc-s-17-edv-project-1/kellyjenningsRESTaccess.R')
source('~/.active-rstudio-document')
redacted <<- 'eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmtlbGx5amVubmluZ3MiLCJpc3MiOiJhZ2VudDprZWxseWplbm5pbmdzOjo0OTllZmNlYi0zOWU0LTQ1NmMtYmM2MS1kNzIyNDRmNmQwN2MiLCJpYXQiOjE0ODQ2OTc3NTgsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.e7IfCn2vYpDiPl2mrXD2uAeGtJ981k8iP0eLAV4LzpV1Mv7RjAPNYjXdSQEqW7-TCwPf52b9DQgzcUzU2GfYkQ'
library("ggplot2", lib.loc="~/R/win-library/3.3")
df <- read.csv("C:\Users\Kelly\Documents\DataVisualization", stringsAsFactors = FALSE)
df <- read.csv("/Users/Kelly/Documents/DataVisualization", stringsAsFactors = FALSE)
df <- read.csv("/Users/Kelly/Documents/DataVisualization/SuperStoreOrders.csv", stringsAsFactors = FALSE)
df <- read.csv("/Users/Kelly/Documents/DataVisualization/SuperStoreOrders.csv", stringsAsFactors = FALSE)
summary(df)
head(df)
p=ggplot(df)+geom_boxplot(aes(x=Category, y=Sales, colour=Region))
print(p)
df <- read.csv("/Users/Kelly/Documents/DataVisualization/SuperStoreOrders.csv", stringsAsFactors = FALSE)
summary(df)
head(df)
p=ggplot(df)+geom_boxplot(aes(x=Category, y=Sales, colour=Region))+theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
summary(df)
head(df)
p=dplyr::filter(df, Region == "international") %>% ggplot(df)+geom_boxplot(aes(x=Category, y=Sales, colour=Region))+theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
library("dplyr", lib.loc="~/R/win-library/3.3")
summary(df)
head(df)
p=dplyr::filter(df, Region == "international") %>% ggplot(df)+geom_boxplot(aes(x=Category, y=Sales, colour=Region))+theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
summary(df)
head(df)
p = dplyr::filter(df, Region == "international") %>% ggplot()+geom_boxplot(aes(x=Category, y=Sales, colour=Region))+theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
summary(df)
head(df)
p = dplyr::filter(df, Region == "international") %>% ggplot(.)+geom_boxplot(aes(x=Category, y=Sales, colour=Region))+theme(axis.text.x=element_text(angle=90, size=10, vjust=0.5))
print(p)
require(tidyr)
require(ggplot2)
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
ggplot(data=df) + geom_point(aes(x=x, y=y))
ggplot(data=df) + geom_point(aes(x=x, y=z))
#create new variable and value columns, dont include x. "%>%" = pipe new df to ggplot
tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, color = variable, size = 4))
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
plot = tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
print(plot)
x=c(1,2,3,4,5); y=x*2; z=x^3; df = data.frame(x,y,z)
ggplot(data=df) + geom_point(aes(x=x, y=y))
ggplot(data=df) + geom_point(aes(x=x, y=z))
tidyr::gather(df, variable, value, -x) %>% ggplot() + geom_point(aes(x=x, y=value, colour = variable, size=4)) + geom_line(aes(x=x, y=value, colour = variable))
lapply('alphabet begins with abc', gsub, pattern="[abc]",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="xyz",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="[^abc]",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="^[abc]",replacement= "")
lapply('alphabet begins with --- abc', gsub, pattern="[a-e]",replacement= "")
lapply('alphabet begins with --- abc', gsub, pattern="[ae-]",replacement= "")
lapply('alphabet begins with [] abc', gsub, pattern="[ae[]",replacement= "")
lapply('alphabet begins with [] abc', gsub, pattern="[ae]]",replacement= "")
lapply('alphabet begins with [] abc', gsub, pattern="[ae]]",replacement= "")
lapply('alphabet begins with [e] abc', gsub, pattern="[ae]]",replacement= "")
lapply('alphabet begins with [e] abc', gsub, pattern="[[ae]]",replacement= "")
lapply('alphabet begins with [e[] abc', gsub, pattern="[[ae]]",replacement= "")
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
View(diamonds)
lapply('alphabet begins with abc', gsub, pattern="[abc]",replacement= "")
lapply('alphabet begins with xyz', gsub, pattern="xyz",replacement= "")
lapply('alphabetxx begins with xyz', gsub, pattern="xyz",replacement= "")
lapply('alphabetxx bexyzgins with xyz', gsub, pattern="xyz",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="[^ac]",replacement= "")
lapply('alphabet begins with --- abc', gsub, pattern="[a-e]",replacement= "")
lapply('alphabet begins with \\\ abc', gsub, pattern="[ae\\]",replacement= "")
lapply('alphabet begins with \\\ abc', gsub, pattern="[ae\\]",replacement= "")
lapply('alphabet begins with \\\ abc', gsub, pattern="[ae\]",replacement= "")
lapply('alphabet begins with [] abc', gsub, pattern="[ae[]",replacement= "")
lapply('alphabet begins with [] abc', gsub, pattern="[ae]]",replacement= "")
lapply('alphabet begins with [e] abc', gsub, pattern="[ae]]",replacement= "")
lapply('alphabet begins with [e] [ae] abc', gsub, pattern="[ae]]",replacement= "")
lapply('alphabet begins with [e] abc', gsub, pattern="[[ae]]",replacement= "")
lapply('alphabet begins with [e] [ae] abc', gsub, pattern="[[ae]]",replacement= "")
lapply('alphabet begins with [e[] abc', gsub, pattern="[[ae]]",replacement= "")
lapply('alphabet begins with [e[] [ae] abc', gsub, pattern="[[ae]]",replacement= "")
lapply('alphabet begins with [] abc', gsub, pattern="[ae]]",replacement= "")
lapply('alphabet begins with [e] [ae] abc', gsub, pattern="[ae]]",replacement= "")
lapply('alphabet begins with [e] [a] abc', gsub, pattern="[ae]]",replacement= "")
lapply('alphabet begins with [e] [a] [ae] [] abc', gsub, pattern="[[ae]]",replacement= "")
lapply('alphabet begins with [e[] [ae] abc] [] [a]', gsub, pattern="[[ae]]",replacement= "")
lapply('alphabet begins with [e[] [ae] abc] [] [a]', gsub, pattern="[^[ae]]",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="ab?c",replacement= "")
lapply('alphabet begins with ac', gsub, pattern="ab?c",replacement= "")
lapply('alphabet begins with c', gsub, pattern="ab?c",replacement= "")
lapply('alphabet begins with abbbc', gsub, pattern="ab?c",replacement= "")
lapply('alphabet begins with abbbc', gsub, pattern="a?b?c",replacement= "")
lapply('alphabet begins with bac', gsub, pattern="a?b?c",replacement= "")
lapply('alphabet begins with abbbc', gsub, pattern="[ab]?c",replacement= "")
lapply('alphabet begins with abc ac bc c', gsub, pattern="[ab]?c",replacement= "")
lapply('alphabet begins with abc bac ac bc c', gsub, pattern="[(ab)(ba)]?c",replacement= "")
lapply('alphabet begins with abc bac c', gsub, pattern="[(ab)(ba)]?c",replacement= "")
lapply('alphabet begins with abc bac c', gsub, pattern="(ab)?c",replacement= "")
lapply('alphabet begins with abc bac c', gsub, pattern="(ba)?(ab)?c",replacement= "")
lapply('alphabet begins with abc bac ab ac c', gsub, pattern="[ab]?(ba)?(ab)?c",replacement= "")
lapply('alphabet begins with abc bac ac bc c', gsub, pattern="[ab]?(ba)?(ab)?c",replacement= "")
lapply('alphabet begins with aabc', gsub, pattern="a*bc",replacement= "")
lapply('alphabet begins with aaaaaaabc', gsub, pattern="a*bc",replacement= "")
lapply('alphabet begins with aaaaaaabc', gsub, pattern="(ab)*c",replacement= "")
lapply('alphabet begins with aaaaaaabcababababc', gsub, pattern="(ab)*c",replacement= "")
lapply('alphabet begins with bc', gsub, pattern="a*bc",replacement= "")
lapply('alphabet begins with aabc', gsub, pattern="a+bc",replacement= "")
lapply('alphabet begins with aabc bc', gsub, pattern="a+bc",replacement= "")
lapply('alphabet begins with aabc', gsub, pattern="a+.c",replacement= "")
lapply('alphabet begins with aaaaabbc', gsub, pattern="a+.c",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="ab?c",replacement= "")
lapply('alphabet begins with aaaaabzc', gsub, pattern="a+..c",replacement= "")
lapply('alphabet begins with aabc', gsub, pattern=".*",replacement= "")
lapply('alphabet begins with aaabc', gsub, pattern="a{2}bc",replacement= "")
lapply('alphabet begins with abc aabc aaabc', gsub, pattern="a{2,}bc",replacement= "")
lapply('alphabet begins with abc aabc aaabc aaaabc aaaaabc', gsub, pattern="a{2,4}bc",replacement= "")
lapply('alphabet begins with abc aabc aaabc aaaabc aaaaabc', gsub, pattern="a{0,4}bc",replacement= "")
lapply('alphabet begins with abc aabc aaabc aaaabc aaaaabc', gsub, pattern="a{,4}bc",replacement= "")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\21234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "xyz")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\212")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\12")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\21234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\11234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\21234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\21234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\31234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\11234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\21234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\31234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\11234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\21234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\11234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\81234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\41234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\31234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\31234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\21234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\11234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\11234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\11234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\21234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\31234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "1234")
lapply('alphabet begins with abc', gsub, pattern="^[abc]",replacement= "")
lapply('the alphabet begins with abc', gsub, pattern="^[ac]",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="^",replacement= "")
lapply('alphabet ^ begins with abc', gsub, pattern="^",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="^alp",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="a^",replacement= "")
lapply('alphabet begins with abc', gsub, pattern="b^a",replacement= "")
lapply('alphabet begins with abbbc', gsub, pattern="a?b?c",replacement= "")
lapply('alphabet begins with aaaaaaabcababababc', gsub, pattern="(ab)*c",replacement= "")
lapply('alphabet begins with bc', gsub, pattern="a*bc",replacement= "")
lapply('alphabet begins with aabc bc', gsub, pattern="a+bc",replacement= "")
lapply('alphabet begins with bc', gsub, pattern="a+bc",replacement= "")
lapply('alphabet begins with aaaaabc', gsub, pattern="a+.c",replacement= "")
lapply('alphabet begins with aaaaabzc', gsub, pattern="a+..c",replacement= "")
lapply('alphabet begins with aabc', gsub, pattern=".*",replacement= "")
lapply('alphabet begins with aaabc', gsub, pattern="a{2}bc",replacement= "")
lapply('alphabet begins with abc aabc aaabc', gsub, pattern="a{2,}bc",replacement= "")
lapply('alphabet begins with abc aabc aaabc aaaabc aaaaabc', gsub, pattern="a{2,4}bc",replacement= "")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "\\21234")
lapply('alphabet begins with aaabcxyz', gsub, pattern="(beg).*(abc)(xyz)",replacement= "\\31234")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "xyz^&*#")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "xyz^&*#?><()%@!~")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "xyz^&*#?><()%@!~\\")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "xyz^&*#?><()%@!~\\\\")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "xyz^&*#?><()%@!~\\")
lapply('alphabet begins with aaabc', gsub, pattern="(beg).*(abc)",replacement= "xyz^&*#?><()%@!\\~")
lapply('alphabet begins with abc', gsub, pattern="[abc]",replacement= "")
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
View(diamonds)
diamonds %>% dplyr::rename(tbl= table) %>% tbl_df # Equivalent: select tbl as "table" from diamonds;
d <- diamonds %>% group_by(cut) %>% dplyr::summarise(n = n()) %>% dplyr::arrange(n) %>% View # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut order by n;
dd <- dplyr::sample_n(diamonds, 500) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
diamonds %>% dplyr::rename(tbl= table) %>% tbl_df # Equivalent: select tbl as "table" from diamonds;
tbl_df(diamonds)
diamonds %>% dplyr::rename(tbl= table) %>% tbl_df # Equivalent: select table as "tbl" from diamonds;
diamonds %>% dplyr::mutate(cummin_x = cummin(x)) %>% tbl_df
c(1,1,2,3,4,3,5) %>% cumsum()
c(1,1,2,3,4,3,5) %>% between(2,4)
c(1:5) %>% cummean()
diamonds %>% dplyr::mutate(between_x = between(x,4,4.1)) %>% tbl_df
diamonds %>% dplyr::mutate(lead_z = lead(z)-z) %>% tbl_df
diamonds %>% dplyr::mutate(lag_z = z-lag(z)) %>% tbl_df
diamonds %>% dplyr::mutate(lead_z = lead(z)-z) %>% tbl_df
diamonds %>% dplyr::mutate(lag_z = z-lag(z)) %>% tbl_df
dd <- dplyr::sample_n(diamonds, 500) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
dd
diamonds %>% dplyr::mutate(ntile_z = ntile(z,100)) %>% group_by(ntile_z) %>% dplyr::summarise(n=n()) %>% tbl_df
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
dplyr::sample_n(diamonds, 500) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
diamonds %>% dplyr::mutate(ntile_z = ntile(z,100)) %>% group_by(ntile_z) %>% dplyr::summarise(n=n()) %>% tbl_df
tbl_df(diamonds)
diamonds %>% group_by(cut) %>% dplyr::summarise(n = n()) %>% dplyr::arrange(n) %>% tbl_df # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut order by n;
tbl_df(diamonds)
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
View(diamonds)
dplyr::sample_n(diamonds, 500) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
diamonds %>% dplyr::sample_n(500) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
dplyr::sample_n(diamonds, 500) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
diamonds %>% dplyr::sample_n(500) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
diamonds %>% dplyr::sample_n(500) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
diamonds %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
tbl_df(diamonds)
tbl_df
dplyr::select(diamonds, cut, clarity) %>% View # Equivalent SQL: select cut, clarity from diamonds;
x <- diamonds %>% dplyr::select(cut, clarity)
x
x <- diamonds %>% dplyr::select(cut, clarity) %>% tbl_df
x
diamonds %>% dplyr::select(cut, clarity) %>% dplyr::filter(cut == "Good") %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds where cut = 'Good';
tbl_df(diamonds)
View(diamonds)
require(tidyr)
require(dplyr)
require(ggplot2)
tbl_df(diamonds)
View(diamonds)
require(tidyr)
require(dplyr)
require(ggplot2)
View(diamonds)
dplyr::select(diamonds, cut, clarity) %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds;
tbl_df(diamonds)
diamonds %>% dplyr::rename(tbl= table) %>% tbl_df # Equivalent: select table as "tbl" from diamonds;
diamonds %>% dplyr::select(table) %>% dplyr::rename(tbl= table) %>% tbl_df # Equivalent: select table as "tbl" from diamonds;
diamonds %>% dplyr::rename(tbl= table) %>% dplyr::select(table) %>% tbl_df # Equivalent: select table as "tbl" from diamonds;
diamonds %>% dplyr::rename(tbl= table) %>% dplyr::select(tbl) %>% tbl_df # Equivalent: select table as "tbl" from diamonds;
dd <- dplyr::sample_frac(diamonds, 0.1) %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
dd
dd <- dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
dd <- diamonds %>% dplyr::mutate(price_percent = cume_dist(price)) %>% dplyr::arrange(desc(price_percent)) %>% tbl_df # Equivalent SQL:
dd
ds <- diamonds %>% summarize(max_price = max(price)) # Equivalent SQL select max(price) as max_price from diamonds;
ds
diamonds %>% summarize(mean = mean(x), sum = sum(x,y,z), n = n()) # Equivalent SQL: select avg(x) as avg, sum(x)+sum(y)+sum(z) as sum, count(*) as n from diamonds;
d <- diamonds %>% group_by(cut) %>% dplyr::summarise(n = n()) %>% dplyr::arrange(n) %>% View # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut order by n;
diamonds %>% group_by(cut,color) %>% dplyr::summarise(mean = mean(x), sum = sum(x,y,z), n = n()) %>% View
d <- diamonds %>% group_by(cut, color) %>% dplyr::summarise(n = n()) %>% dplyr::arrange(n) %>% View # Equivalent SQL: select cut, color, count(*) n from diamonds group by cut order by n;
diamonds %>% dplyr::group_by(cut, color, clarity) %>% dplyr::summarise(mean_carat = mean(carat)) %>% ggplot(aes(x=cut, y=mean_carat, colour=color)) + geom_point() + facet_wrap(~clarity)
diamonds %>% dplyr::mutate(lead_z = lead(z)-z) %>% tbl_df
diamonds %>% dplyr::mutate(lag_z = z-lag(z)) %>% tbl_df
diamonds %>% select(cut, clarity) %>% tbl_df
diamonds %>% select(cut, clarity) %>% filter(cut == "Good") %>% tbl_df # Equivalent SQL: select cut, clarity from diamonds where cut = 'Good';
diamonds %>% group_by(cut,color) %>% dplyr::summarise(mean = mean(x), sum = sum(x,y,z), n = n()) %>% ungroup %>% summarize(sum(n))
diamonds %>% group_by(cut,color) %>% dplyr::summarise(mean = mean(x), sum = sum(x,y,z), n = n()) %>% dplyr::arrange(n)
diamonds %>% group_by(cut,color) %>% dplyr::summarise(mean = mean(x), sum = sum(x,y,z), n = n()) %>% dplyr::arrange(desc(n), cut, color)
require("jsonlite")
require("RCurl")
df <- data.frame(fromJSON(getURL(URLencode(gsub("\n", " ",'oraclerest.cs.utexas.edu:5000/rest/native/?query="select * from irises"')),httpheader=c(DB='jdbc:data:world:sql:conneyc:s-17-dv-project-4', USER='conneyc', PASS='eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50OmNvbm5leWMiLCJpc3MiOiJhZ2VudDpjb25uZXljOjoyYTEyMDNkYS1lM2YzLTRjNWYtODAyMy1jYmFmMmJmMmRjZjkiLCJpYXQiOjE0ODQ2OTcyMTUsInJvbGUiOlsidXNlcl9hcGlfd3JpdGUiLCJ1c2VyX2FwaV9yZWFkIl0sImdlbmVyYWwtcHVycG9zZSI6dHJ1ZX0.aQy8F6cDXh9qhvq8i8ZW_6lUpHMEjXm2hfU_zt2kVKPBE_unlANG5RazcIf2Gvp9YZ1VeOuGmgJEw3W2qTHbJQ', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON'), verbose = TRUE), ))
shiny::runApp('DataVisualization/p4/02 Shiny')
shiny::runApp('DataVisualization/DrCannataMarch23/08 Shiny Actions')
setwd("~/")
shiny::runApp('DataVisualization/DrCannataApril4/09 Crosstabs')
runApp('DataVisualization/DrCannataApril4/09 Crosstabs')
runApp('DataVisualization/DrCannataApril4/09 Crosstabs')
runApp('DataVisualization/DrCannataApril4/09 Crosstabs')
runApp('DataVisualization/DrCannataApril4/09 Crosstabs')
runApp('DataVisualization/DrCannataApril4/09 Crosstabs')
runApp('DataVisualization/DrCannataApril4/09 Crosstabs')
shiny::runApp('DataVisualization/Project5/02 Shiny')
setwd("~/DataVisualization/FinalProject/00 Doc")
setwd("~/DataVisualization/FinalProject/00 Doc")
setwd("~/DataVisualization/FinalProject/02 Shiny")
shiny::runApp()
setwd("~/DataVisualization/FinalProject/00 Doc")
sessionInfo(package=NULL)
source("../01 Data/ETL.R")
setwd("~/DataVisualization/FinalProject/02 Shiny")
